
PES_FINAL_PROJECT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000017c4  080000bc  080000bc  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000cc  08001880  08001880  00002880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800194c  0800194c  00003060  2**0
                  CONTENTS
  4 .ARM          00000000  0800194c  0800194c  00003060  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800194c  0800194c  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800194c  0800194c  0000294c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001950  08001950  00002950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08001954  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000060  080019b4  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  080019b4  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001f40  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000009a8  00000000  00000000  00004fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000290  00000000  00000000  00005970  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001c8  00000000  00000000  00005c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001ad9c  00000000  00000000  00005dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003c12  00000000  00000000  00020b64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a0f82  00000000  00000000  00024776  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c56f8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f34  00000000  00000000  000c573c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  000c6670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	@ (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	@ (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	@ (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000060 	.word	0x20000060
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08001868 	.word	0x08001868

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	@ (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	@ (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	@ (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			@ (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000064 	.word	0x20000064
 8000100:	08001868 	.word	0x08001868

08000104 <__gnu_thumb1_case_shi>:
 8000104:	b403      	push	{r0, r1}
 8000106:	4671      	mov	r1, lr
 8000108:	0849      	lsrs	r1, r1, #1
 800010a:	0040      	lsls	r0, r0, #1
 800010c:	0049      	lsls	r1, r1, #1
 800010e:	5e09      	ldrsh	r1, [r1, r0]
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	448e      	add	lr, r1
 8000114:	bc03      	pop	{r0, r1}
 8000116:	4770      	bx	lr

08000118 <__udivsi3>:
 8000118:	2200      	movs	r2, #0
 800011a:	0843      	lsrs	r3, r0, #1
 800011c:	428b      	cmp	r3, r1
 800011e:	d374      	bcc.n	800020a <__udivsi3+0xf2>
 8000120:	0903      	lsrs	r3, r0, #4
 8000122:	428b      	cmp	r3, r1
 8000124:	d35f      	bcc.n	80001e6 <__udivsi3+0xce>
 8000126:	0a03      	lsrs	r3, r0, #8
 8000128:	428b      	cmp	r3, r1
 800012a:	d344      	bcc.n	80001b6 <__udivsi3+0x9e>
 800012c:	0b03      	lsrs	r3, r0, #12
 800012e:	428b      	cmp	r3, r1
 8000130:	d328      	bcc.n	8000184 <__udivsi3+0x6c>
 8000132:	0c03      	lsrs	r3, r0, #16
 8000134:	428b      	cmp	r3, r1
 8000136:	d30d      	bcc.n	8000154 <__udivsi3+0x3c>
 8000138:	22ff      	movs	r2, #255	@ 0xff
 800013a:	0209      	lsls	r1, r1, #8
 800013c:	ba12      	rev	r2, r2
 800013e:	0c03      	lsrs	r3, r0, #16
 8000140:	428b      	cmp	r3, r1
 8000142:	d302      	bcc.n	800014a <__udivsi3+0x32>
 8000144:	1212      	asrs	r2, r2, #8
 8000146:	0209      	lsls	r1, r1, #8
 8000148:	d065      	beq.n	8000216 <__udivsi3+0xfe>
 800014a:	0b03      	lsrs	r3, r0, #12
 800014c:	428b      	cmp	r3, r1
 800014e:	d319      	bcc.n	8000184 <__udivsi3+0x6c>
 8000150:	e000      	b.n	8000154 <__udivsi3+0x3c>
 8000152:	0a09      	lsrs	r1, r1, #8
 8000154:	0bc3      	lsrs	r3, r0, #15
 8000156:	428b      	cmp	r3, r1
 8000158:	d301      	bcc.n	800015e <__udivsi3+0x46>
 800015a:	03cb      	lsls	r3, r1, #15
 800015c:	1ac0      	subs	r0, r0, r3
 800015e:	4152      	adcs	r2, r2
 8000160:	0b83      	lsrs	r3, r0, #14
 8000162:	428b      	cmp	r3, r1
 8000164:	d301      	bcc.n	800016a <__udivsi3+0x52>
 8000166:	038b      	lsls	r3, r1, #14
 8000168:	1ac0      	subs	r0, r0, r3
 800016a:	4152      	adcs	r2, r2
 800016c:	0b43      	lsrs	r3, r0, #13
 800016e:	428b      	cmp	r3, r1
 8000170:	d301      	bcc.n	8000176 <__udivsi3+0x5e>
 8000172:	034b      	lsls	r3, r1, #13
 8000174:	1ac0      	subs	r0, r0, r3
 8000176:	4152      	adcs	r2, r2
 8000178:	0b03      	lsrs	r3, r0, #12
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x6a>
 800017e:	030b      	lsls	r3, r1, #12
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0ac3      	lsrs	r3, r0, #11
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x76>
 800018a:	02cb      	lsls	r3, r1, #11
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0a83      	lsrs	r3, r0, #10
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x82>
 8000196:	028b      	lsls	r3, r1, #10
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0a43      	lsrs	r3, r0, #9
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x8e>
 80001a2:	024b      	lsls	r3, r1, #9
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0a03      	lsrs	r3, r0, #8
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x9a>
 80001ae:	020b      	lsls	r3, r1, #8
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	d2cd      	bcs.n	8000152 <__udivsi3+0x3a>
 80001b6:	09c3      	lsrs	r3, r0, #7
 80001b8:	428b      	cmp	r3, r1
 80001ba:	d301      	bcc.n	80001c0 <__udivsi3+0xa8>
 80001bc:	01cb      	lsls	r3, r1, #7
 80001be:	1ac0      	subs	r0, r0, r3
 80001c0:	4152      	adcs	r2, r2
 80001c2:	0983      	lsrs	r3, r0, #6
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d301      	bcc.n	80001cc <__udivsi3+0xb4>
 80001c8:	018b      	lsls	r3, r1, #6
 80001ca:	1ac0      	subs	r0, r0, r3
 80001cc:	4152      	adcs	r2, r2
 80001ce:	0943      	lsrs	r3, r0, #5
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d301      	bcc.n	80001d8 <__udivsi3+0xc0>
 80001d4:	014b      	lsls	r3, r1, #5
 80001d6:	1ac0      	subs	r0, r0, r3
 80001d8:	4152      	adcs	r2, r2
 80001da:	0903      	lsrs	r3, r0, #4
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xcc>
 80001e0:	010b      	lsls	r3, r1, #4
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	08c3      	lsrs	r3, r0, #3
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xd8>
 80001ec:	00cb      	lsls	r3, r1, #3
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0883      	lsrs	r3, r0, #2
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xe4>
 80001f8:	008b      	lsls	r3, r1, #2
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0843      	lsrs	r3, r0, #1
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xf0>
 8000204:	004b      	lsls	r3, r1, #1
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	1a41      	subs	r1, r0, r1
 800020c:	d200      	bcs.n	8000210 <__udivsi3+0xf8>
 800020e:	4601      	mov	r1, r0
 8000210:	4152      	adcs	r2, r2
 8000212:	4610      	mov	r0, r2
 8000214:	4770      	bx	lr
 8000216:	e7ff      	b.n	8000218 <__udivsi3+0x100>
 8000218:	b501      	push	{r0, lr}
 800021a:	2000      	movs	r0, #0
 800021c:	f000 f806 	bl	800022c <__aeabi_idiv0>
 8000220:	bd02      	pop	{r1, pc}
 8000222:	46c0      	nop			@ (mov r8, r8)

08000224 <__aeabi_uidivmod>:
 8000224:	2900      	cmp	r1, #0
 8000226:	d0f7      	beq.n	8000218 <__udivsi3+0x100>
 8000228:	e776      	b.n	8000118 <__udivsi3>
 800022a:	4770      	bx	lr

0800022c <__aeabi_idiv0>:
 800022c:	4770      	bx	lr
 800022e:	46c0      	nop			@ (mov r8, r8)

08000230 <__aeabi_fdiv>:
 8000230:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000232:	464f      	mov	r7, r9
 8000234:	4646      	mov	r6, r8
 8000236:	46d6      	mov	lr, sl
 8000238:	0244      	lsls	r4, r0, #9
 800023a:	b5c0      	push	{r6, r7, lr}
 800023c:	0047      	lsls	r7, r0, #1
 800023e:	1c0e      	adds	r6, r1, #0
 8000240:	0a64      	lsrs	r4, r4, #9
 8000242:	0e3f      	lsrs	r7, r7, #24
 8000244:	0fc5      	lsrs	r5, r0, #31
 8000246:	2f00      	cmp	r7, #0
 8000248:	d03c      	beq.n	80002c4 <__aeabi_fdiv+0x94>
 800024a:	2fff      	cmp	r7, #255	@ 0xff
 800024c:	d042      	beq.n	80002d4 <__aeabi_fdiv+0xa4>
 800024e:	2300      	movs	r3, #0
 8000250:	2280      	movs	r2, #128	@ 0x80
 8000252:	4699      	mov	r9, r3
 8000254:	469a      	mov	sl, r3
 8000256:	00e4      	lsls	r4, r4, #3
 8000258:	04d2      	lsls	r2, r2, #19
 800025a:	4314      	orrs	r4, r2
 800025c:	3f7f      	subs	r7, #127	@ 0x7f
 800025e:	0273      	lsls	r3, r6, #9
 8000260:	0a5b      	lsrs	r3, r3, #9
 8000262:	4698      	mov	r8, r3
 8000264:	0073      	lsls	r3, r6, #1
 8000266:	0e1b      	lsrs	r3, r3, #24
 8000268:	0ff6      	lsrs	r6, r6, #31
 800026a:	2b00      	cmp	r3, #0
 800026c:	d01b      	beq.n	80002a6 <__aeabi_fdiv+0x76>
 800026e:	2bff      	cmp	r3, #255	@ 0xff
 8000270:	d013      	beq.n	800029a <__aeabi_fdiv+0x6a>
 8000272:	4642      	mov	r2, r8
 8000274:	2180      	movs	r1, #128	@ 0x80
 8000276:	00d2      	lsls	r2, r2, #3
 8000278:	04c9      	lsls	r1, r1, #19
 800027a:	4311      	orrs	r1, r2
 800027c:	4688      	mov	r8, r1
 800027e:	2000      	movs	r0, #0
 8000280:	3b7f      	subs	r3, #127	@ 0x7f
 8000282:	0029      	movs	r1, r5
 8000284:	1aff      	subs	r7, r7, r3
 8000286:	464b      	mov	r3, r9
 8000288:	4071      	eors	r1, r6
 800028a:	b2c9      	uxtb	r1, r1
 800028c:	2b0f      	cmp	r3, #15
 800028e:	d900      	bls.n	8000292 <__aeabi_fdiv+0x62>
 8000290:	e0b5      	b.n	80003fe <__aeabi_fdiv+0x1ce>
 8000292:	4a74      	ldr	r2, [pc, #464]	@ (8000464 <__aeabi_fdiv+0x234>)
 8000294:	009b      	lsls	r3, r3, #2
 8000296:	58d3      	ldr	r3, [r2, r3]
 8000298:	469f      	mov	pc, r3
 800029a:	4643      	mov	r3, r8
 800029c:	2b00      	cmp	r3, #0
 800029e:	d13f      	bne.n	8000320 <__aeabi_fdiv+0xf0>
 80002a0:	3fff      	subs	r7, #255	@ 0xff
 80002a2:	3302      	adds	r3, #2
 80002a4:	e003      	b.n	80002ae <__aeabi_fdiv+0x7e>
 80002a6:	4643      	mov	r3, r8
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d12d      	bne.n	8000308 <__aeabi_fdiv+0xd8>
 80002ac:	2301      	movs	r3, #1
 80002ae:	0029      	movs	r1, r5
 80002b0:	464a      	mov	r2, r9
 80002b2:	4071      	eors	r1, r6
 80002b4:	b2c9      	uxtb	r1, r1
 80002b6:	431a      	orrs	r2, r3
 80002b8:	2a0e      	cmp	r2, #14
 80002ba:	d838      	bhi.n	800032e <__aeabi_fdiv+0xfe>
 80002bc:	486a      	ldr	r0, [pc, #424]	@ (8000468 <__aeabi_fdiv+0x238>)
 80002be:	0092      	lsls	r2, r2, #2
 80002c0:	5882      	ldr	r2, [r0, r2]
 80002c2:	4697      	mov	pc, r2
 80002c4:	2c00      	cmp	r4, #0
 80002c6:	d113      	bne.n	80002f0 <__aeabi_fdiv+0xc0>
 80002c8:	2304      	movs	r3, #4
 80002ca:	4699      	mov	r9, r3
 80002cc:	3b03      	subs	r3, #3
 80002ce:	2700      	movs	r7, #0
 80002d0:	469a      	mov	sl, r3
 80002d2:	e7c4      	b.n	800025e <__aeabi_fdiv+0x2e>
 80002d4:	2c00      	cmp	r4, #0
 80002d6:	d105      	bne.n	80002e4 <__aeabi_fdiv+0xb4>
 80002d8:	2308      	movs	r3, #8
 80002da:	4699      	mov	r9, r3
 80002dc:	3b06      	subs	r3, #6
 80002de:	27ff      	movs	r7, #255	@ 0xff
 80002e0:	469a      	mov	sl, r3
 80002e2:	e7bc      	b.n	800025e <__aeabi_fdiv+0x2e>
 80002e4:	230c      	movs	r3, #12
 80002e6:	4699      	mov	r9, r3
 80002e8:	3b09      	subs	r3, #9
 80002ea:	27ff      	movs	r7, #255	@ 0xff
 80002ec:	469a      	mov	sl, r3
 80002ee:	e7b6      	b.n	800025e <__aeabi_fdiv+0x2e>
 80002f0:	0020      	movs	r0, r4
 80002f2:	f000 f8ff 	bl	80004f4 <__clzsi2>
 80002f6:	2776      	movs	r7, #118	@ 0x76
 80002f8:	1f43      	subs	r3, r0, #5
 80002fa:	409c      	lsls	r4, r3
 80002fc:	2300      	movs	r3, #0
 80002fe:	427f      	negs	r7, r7
 8000300:	4699      	mov	r9, r3
 8000302:	469a      	mov	sl, r3
 8000304:	1a3f      	subs	r7, r7, r0
 8000306:	e7aa      	b.n	800025e <__aeabi_fdiv+0x2e>
 8000308:	4640      	mov	r0, r8
 800030a:	f000 f8f3 	bl	80004f4 <__clzsi2>
 800030e:	4642      	mov	r2, r8
 8000310:	1f43      	subs	r3, r0, #5
 8000312:	409a      	lsls	r2, r3
 8000314:	2376      	movs	r3, #118	@ 0x76
 8000316:	425b      	negs	r3, r3
 8000318:	1a1b      	subs	r3, r3, r0
 800031a:	4690      	mov	r8, r2
 800031c:	2000      	movs	r0, #0
 800031e:	e7b0      	b.n	8000282 <__aeabi_fdiv+0x52>
 8000320:	2303      	movs	r3, #3
 8000322:	464a      	mov	r2, r9
 8000324:	431a      	orrs	r2, r3
 8000326:	4691      	mov	r9, r2
 8000328:	2003      	movs	r0, #3
 800032a:	33fc      	adds	r3, #252	@ 0xfc
 800032c:	e7a9      	b.n	8000282 <__aeabi_fdiv+0x52>
 800032e:	000d      	movs	r5, r1
 8000330:	20ff      	movs	r0, #255	@ 0xff
 8000332:	2200      	movs	r2, #0
 8000334:	05c0      	lsls	r0, r0, #23
 8000336:	07ed      	lsls	r5, r5, #31
 8000338:	4310      	orrs	r0, r2
 800033a:	4328      	orrs	r0, r5
 800033c:	bce0      	pop	{r5, r6, r7}
 800033e:	46ba      	mov	sl, r7
 8000340:	46b1      	mov	r9, r6
 8000342:	46a8      	mov	r8, r5
 8000344:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000346:	000d      	movs	r5, r1
 8000348:	2000      	movs	r0, #0
 800034a:	2200      	movs	r2, #0
 800034c:	e7f2      	b.n	8000334 <__aeabi_fdiv+0x104>
 800034e:	4653      	mov	r3, sl
 8000350:	2b02      	cmp	r3, #2
 8000352:	d0ed      	beq.n	8000330 <__aeabi_fdiv+0x100>
 8000354:	2b03      	cmp	r3, #3
 8000356:	d033      	beq.n	80003c0 <__aeabi_fdiv+0x190>
 8000358:	46a0      	mov	r8, r4
 800035a:	2b01      	cmp	r3, #1
 800035c:	d105      	bne.n	800036a <__aeabi_fdiv+0x13a>
 800035e:	2000      	movs	r0, #0
 8000360:	2200      	movs	r2, #0
 8000362:	e7e7      	b.n	8000334 <__aeabi_fdiv+0x104>
 8000364:	0035      	movs	r5, r6
 8000366:	2803      	cmp	r0, #3
 8000368:	d07a      	beq.n	8000460 <__aeabi_fdiv+0x230>
 800036a:	003b      	movs	r3, r7
 800036c:	337f      	adds	r3, #127	@ 0x7f
 800036e:	2b00      	cmp	r3, #0
 8000370:	dd2d      	ble.n	80003ce <__aeabi_fdiv+0x19e>
 8000372:	4642      	mov	r2, r8
 8000374:	0752      	lsls	r2, r2, #29
 8000376:	d007      	beq.n	8000388 <__aeabi_fdiv+0x158>
 8000378:	220f      	movs	r2, #15
 800037a:	4641      	mov	r1, r8
 800037c:	400a      	ands	r2, r1
 800037e:	2a04      	cmp	r2, #4
 8000380:	d002      	beq.n	8000388 <__aeabi_fdiv+0x158>
 8000382:	2204      	movs	r2, #4
 8000384:	4694      	mov	ip, r2
 8000386:	44e0      	add	r8, ip
 8000388:	4642      	mov	r2, r8
 800038a:	0112      	lsls	r2, r2, #4
 800038c:	d505      	bpl.n	800039a <__aeabi_fdiv+0x16a>
 800038e:	4642      	mov	r2, r8
 8000390:	4b36      	ldr	r3, [pc, #216]	@ (800046c <__aeabi_fdiv+0x23c>)
 8000392:	401a      	ands	r2, r3
 8000394:	003b      	movs	r3, r7
 8000396:	4690      	mov	r8, r2
 8000398:	3380      	adds	r3, #128	@ 0x80
 800039a:	2bfe      	cmp	r3, #254	@ 0xfe
 800039c:	dcc8      	bgt.n	8000330 <__aeabi_fdiv+0x100>
 800039e:	4642      	mov	r2, r8
 80003a0:	0192      	lsls	r2, r2, #6
 80003a2:	0a52      	lsrs	r2, r2, #9
 80003a4:	b2d8      	uxtb	r0, r3
 80003a6:	e7c5      	b.n	8000334 <__aeabi_fdiv+0x104>
 80003a8:	2280      	movs	r2, #128	@ 0x80
 80003aa:	2500      	movs	r5, #0
 80003ac:	20ff      	movs	r0, #255	@ 0xff
 80003ae:	03d2      	lsls	r2, r2, #15
 80003b0:	e7c0      	b.n	8000334 <__aeabi_fdiv+0x104>
 80003b2:	2280      	movs	r2, #128	@ 0x80
 80003b4:	03d2      	lsls	r2, r2, #15
 80003b6:	4214      	tst	r4, r2
 80003b8:	d002      	beq.n	80003c0 <__aeabi_fdiv+0x190>
 80003ba:	4643      	mov	r3, r8
 80003bc:	4213      	tst	r3, r2
 80003be:	d049      	beq.n	8000454 <__aeabi_fdiv+0x224>
 80003c0:	2280      	movs	r2, #128	@ 0x80
 80003c2:	03d2      	lsls	r2, r2, #15
 80003c4:	4322      	orrs	r2, r4
 80003c6:	0252      	lsls	r2, r2, #9
 80003c8:	20ff      	movs	r0, #255	@ 0xff
 80003ca:	0a52      	lsrs	r2, r2, #9
 80003cc:	e7b2      	b.n	8000334 <__aeabi_fdiv+0x104>
 80003ce:	2201      	movs	r2, #1
 80003d0:	1ad3      	subs	r3, r2, r3
 80003d2:	2b1b      	cmp	r3, #27
 80003d4:	dcc3      	bgt.n	800035e <__aeabi_fdiv+0x12e>
 80003d6:	4642      	mov	r2, r8
 80003d8:	40da      	lsrs	r2, r3
 80003da:	4643      	mov	r3, r8
 80003dc:	379e      	adds	r7, #158	@ 0x9e
 80003de:	40bb      	lsls	r3, r7
 80003e0:	1e59      	subs	r1, r3, #1
 80003e2:	418b      	sbcs	r3, r1
 80003e4:	431a      	orrs	r2, r3
 80003e6:	0753      	lsls	r3, r2, #29
 80003e8:	d004      	beq.n	80003f4 <__aeabi_fdiv+0x1c4>
 80003ea:	230f      	movs	r3, #15
 80003ec:	4013      	ands	r3, r2
 80003ee:	2b04      	cmp	r3, #4
 80003f0:	d000      	beq.n	80003f4 <__aeabi_fdiv+0x1c4>
 80003f2:	3204      	adds	r2, #4
 80003f4:	0153      	lsls	r3, r2, #5
 80003f6:	d529      	bpl.n	800044c <__aeabi_fdiv+0x21c>
 80003f8:	2001      	movs	r0, #1
 80003fa:	2200      	movs	r2, #0
 80003fc:	e79a      	b.n	8000334 <__aeabi_fdiv+0x104>
 80003fe:	4642      	mov	r2, r8
 8000400:	0163      	lsls	r3, r4, #5
 8000402:	0155      	lsls	r5, r2, #5
 8000404:	42ab      	cmp	r3, r5
 8000406:	d215      	bcs.n	8000434 <__aeabi_fdiv+0x204>
 8000408:	201b      	movs	r0, #27
 800040a:	2200      	movs	r2, #0
 800040c:	3f01      	subs	r7, #1
 800040e:	2601      	movs	r6, #1
 8000410:	001c      	movs	r4, r3
 8000412:	0052      	lsls	r2, r2, #1
 8000414:	005b      	lsls	r3, r3, #1
 8000416:	2c00      	cmp	r4, #0
 8000418:	db01      	blt.n	800041e <__aeabi_fdiv+0x1ee>
 800041a:	429d      	cmp	r5, r3
 800041c:	d801      	bhi.n	8000422 <__aeabi_fdiv+0x1f2>
 800041e:	1b5b      	subs	r3, r3, r5
 8000420:	4332      	orrs	r2, r6
 8000422:	3801      	subs	r0, #1
 8000424:	2800      	cmp	r0, #0
 8000426:	d1f3      	bne.n	8000410 <__aeabi_fdiv+0x1e0>
 8000428:	1e58      	subs	r0, r3, #1
 800042a:	4183      	sbcs	r3, r0
 800042c:	4313      	orrs	r3, r2
 800042e:	4698      	mov	r8, r3
 8000430:	000d      	movs	r5, r1
 8000432:	e79a      	b.n	800036a <__aeabi_fdiv+0x13a>
 8000434:	201a      	movs	r0, #26
 8000436:	2201      	movs	r2, #1
 8000438:	1b5b      	subs	r3, r3, r5
 800043a:	e7e8      	b.n	800040e <__aeabi_fdiv+0x1de>
 800043c:	3b02      	subs	r3, #2
 800043e:	425a      	negs	r2, r3
 8000440:	4153      	adcs	r3, r2
 8000442:	425b      	negs	r3, r3
 8000444:	0035      	movs	r5, r6
 8000446:	2200      	movs	r2, #0
 8000448:	b2d8      	uxtb	r0, r3
 800044a:	e773      	b.n	8000334 <__aeabi_fdiv+0x104>
 800044c:	0192      	lsls	r2, r2, #6
 800044e:	2000      	movs	r0, #0
 8000450:	0a52      	lsrs	r2, r2, #9
 8000452:	e76f      	b.n	8000334 <__aeabi_fdiv+0x104>
 8000454:	431a      	orrs	r2, r3
 8000456:	0252      	lsls	r2, r2, #9
 8000458:	0035      	movs	r5, r6
 800045a:	20ff      	movs	r0, #255	@ 0xff
 800045c:	0a52      	lsrs	r2, r2, #9
 800045e:	e769      	b.n	8000334 <__aeabi_fdiv+0x104>
 8000460:	4644      	mov	r4, r8
 8000462:	e7ad      	b.n	80003c0 <__aeabi_fdiv+0x190>
 8000464:	0800189c 	.word	0x0800189c
 8000468:	080018dc 	.word	0x080018dc
 800046c:	f7ffffff 	.word	0xf7ffffff

08000470 <__aeabi_ui2f>:
 8000470:	b570      	push	{r4, r5, r6, lr}
 8000472:	1e04      	subs	r4, r0, #0
 8000474:	d00e      	beq.n	8000494 <__aeabi_ui2f+0x24>
 8000476:	f000 f83d 	bl	80004f4 <__clzsi2>
 800047a:	239e      	movs	r3, #158	@ 0x9e
 800047c:	0001      	movs	r1, r0
 800047e:	1a1b      	subs	r3, r3, r0
 8000480:	2b96      	cmp	r3, #150	@ 0x96
 8000482:	dc0c      	bgt.n	800049e <__aeabi_ui2f+0x2e>
 8000484:	2808      	cmp	r0, #8
 8000486:	d02f      	beq.n	80004e8 <__aeabi_ui2f+0x78>
 8000488:	3908      	subs	r1, #8
 800048a:	408c      	lsls	r4, r1
 800048c:	0264      	lsls	r4, r4, #9
 800048e:	0a64      	lsrs	r4, r4, #9
 8000490:	b2d8      	uxtb	r0, r3
 8000492:	e001      	b.n	8000498 <__aeabi_ui2f+0x28>
 8000494:	2000      	movs	r0, #0
 8000496:	2400      	movs	r4, #0
 8000498:	05c0      	lsls	r0, r0, #23
 800049a:	4320      	orrs	r0, r4
 800049c:	bd70      	pop	{r4, r5, r6, pc}
 800049e:	2b99      	cmp	r3, #153	@ 0x99
 80004a0:	dc16      	bgt.n	80004d0 <__aeabi_ui2f+0x60>
 80004a2:	1f42      	subs	r2, r0, #5
 80004a4:	2805      	cmp	r0, #5
 80004a6:	d000      	beq.n	80004aa <__aeabi_ui2f+0x3a>
 80004a8:	4094      	lsls	r4, r2
 80004aa:	0022      	movs	r2, r4
 80004ac:	4810      	ldr	r0, [pc, #64]	@ (80004f0 <__aeabi_ui2f+0x80>)
 80004ae:	4002      	ands	r2, r0
 80004b0:	0765      	lsls	r5, r4, #29
 80004b2:	d009      	beq.n	80004c8 <__aeabi_ui2f+0x58>
 80004b4:	250f      	movs	r5, #15
 80004b6:	402c      	ands	r4, r5
 80004b8:	2c04      	cmp	r4, #4
 80004ba:	d005      	beq.n	80004c8 <__aeabi_ui2f+0x58>
 80004bc:	3204      	adds	r2, #4
 80004be:	0154      	lsls	r4, r2, #5
 80004c0:	d502      	bpl.n	80004c8 <__aeabi_ui2f+0x58>
 80004c2:	239f      	movs	r3, #159	@ 0x9f
 80004c4:	4002      	ands	r2, r0
 80004c6:	1a5b      	subs	r3, r3, r1
 80004c8:	0192      	lsls	r2, r2, #6
 80004ca:	0a54      	lsrs	r4, r2, #9
 80004cc:	b2d8      	uxtb	r0, r3
 80004ce:	e7e3      	b.n	8000498 <__aeabi_ui2f+0x28>
 80004d0:	0002      	movs	r2, r0
 80004d2:	0020      	movs	r0, r4
 80004d4:	321b      	adds	r2, #27
 80004d6:	4090      	lsls	r0, r2
 80004d8:	0002      	movs	r2, r0
 80004da:	1e50      	subs	r0, r2, #1
 80004dc:	4182      	sbcs	r2, r0
 80004de:	2005      	movs	r0, #5
 80004e0:	1a40      	subs	r0, r0, r1
 80004e2:	40c4      	lsrs	r4, r0
 80004e4:	4314      	orrs	r4, r2
 80004e6:	e7e0      	b.n	80004aa <__aeabi_ui2f+0x3a>
 80004e8:	0264      	lsls	r4, r4, #9
 80004ea:	2096      	movs	r0, #150	@ 0x96
 80004ec:	0a64      	lsrs	r4, r4, #9
 80004ee:	e7d3      	b.n	8000498 <__aeabi_ui2f+0x28>
 80004f0:	fbffffff 	.word	0xfbffffff

080004f4 <__clzsi2>:
 80004f4:	211c      	movs	r1, #28
 80004f6:	2301      	movs	r3, #1
 80004f8:	041b      	lsls	r3, r3, #16
 80004fa:	4298      	cmp	r0, r3
 80004fc:	d301      	bcc.n	8000502 <__clzsi2+0xe>
 80004fe:	0c00      	lsrs	r0, r0, #16
 8000500:	3910      	subs	r1, #16
 8000502:	0a1b      	lsrs	r3, r3, #8
 8000504:	4298      	cmp	r0, r3
 8000506:	d301      	bcc.n	800050c <__clzsi2+0x18>
 8000508:	0a00      	lsrs	r0, r0, #8
 800050a:	3908      	subs	r1, #8
 800050c:	091b      	lsrs	r3, r3, #4
 800050e:	4298      	cmp	r0, r3
 8000510:	d301      	bcc.n	8000516 <__clzsi2+0x22>
 8000512:	0900      	lsrs	r0, r0, #4
 8000514:	3904      	subs	r1, #4
 8000516:	a202      	add	r2, pc, #8	@ (adr r2, 8000520 <__clzsi2+0x2c>)
 8000518:	5c10      	ldrb	r0, [r2, r0]
 800051a:	1840      	adds	r0, r0, r1
 800051c:	4770      	bx	lr
 800051e:	46c0      	nop			@ (mov r8, r8)
 8000520:	02020304 	.word	0x02020304
 8000524:	01010101 	.word	0x01010101
	...

08000530 <I2C_Init>:
#include "Initialization.h"
#define I2C_ADDRESS 0x57     // USS module's I2C address
#define TIMEOUT 100000

void I2C_Init(void)
{
 8000530:	b580      	push	{r7, lr}
 8000532:	af00      	add	r7, sp, #0
	// Enable GPIOB clock
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 8000534:	4b26      	ldr	r3, [pc, #152]	@ (80005d0 <I2C_Init+0xa0>)
 8000536:	695a      	ldr	r2, [r3, #20]
 8000538:	4b25      	ldr	r3, [pc, #148]	@ (80005d0 <I2C_Init+0xa0>)
 800053a:	2180      	movs	r1, #128	@ 0x80
 800053c:	02c9      	lsls	r1, r1, #11
 800053e:	430a      	orrs	r2, r1
 8000540:	615a      	str	r2, [r3, #20]

    // Enable USART2 clock

    // Step 2: Configure PB6 (SCL) and PB7 (SDA) as alternate function
    GPIOB->MODER &= ~((3U << (6 * 2)) | (3U << (7 * 2))); // Clear mode bits for PB6 and PB7
 8000542:	4b24      	ldr	r3, [pc, #144]	@ (80005d4 <I2C_Init+0xa4>)
 8000544:	681a      	ldr	r2, [r3, #0]
 8000546:	4b23      	ldr	r3, [pc, #140]	@ (80005d4 <I2C_Init+0xa4>)
 8000548:	4923      	ldr	r1, [pc, #140]	@ (80005d8 <I2C_Init+0xa8>)
 800054a:	400a      	ands	r2, r1
 800054c:	601a      	str	r2, [r3, #0]
    GPIOB->MODER |= ((1 << (13)));  // Set PB6 and PB7 to alternate function
 800054e:	4b21      	ldr	r3, [pc, #132]	@ (80005d4 <I2C_Init+0xa4>)
 8000550:	681a      	ldr	r2, [r3, #0]
 8000552:	4b20      	ldr	r3, [pc, #128]	@ (80005d4 <I2C_Init+0xa4>)
 8000554:	2180      	movs	r1, #128	@ 0x80
 8000556:	0189      	lsls	r1, r1, #6
 8000558:	430a      	orrs	r2, r1
 800055a:	601a      	str	r2, [r3, #0]
    GPIOB->MODER |= (1 << (15));
 800055c:	4b1d      	ldr	r3, [pc, #116]	@ (80005d4 <I2C_Init+0xa4>)
 800055e:	681a      	ldr	r2, [r3, #0]
 8000560:	4b1c      	ldr	r3, [pc, #112]	@ (80005d4 <I2C_Init+0xa4>)
 8000562:	2180      	movs	r1, #128	@ 0x80
 8000564:	0209      	lsls	r1, r1, #8
 8000566:	430a      	orrs	r2, r1
 8000568:	601a      	str	r2, [r3, #0]
    GPIOB->AFR[0] |= (1U << (6 * 4)) | (1U << (7 * 4));   // Set AF1 (I2C1) for PB6 and PB7
 800056a:	4b1a      	ldr	r3, [pc, #104]	@ (80005d4 <I2C_Init+0xa4>)
 800056c:	6a1a      	ldr	r2, [r3, #32]
 800056e:	4b19      	ldr	r3, [pc, #100]	@ (80005d4 <I2C_Init+0xa4>)
 8000570:	2188      	movs	r1, #136	@ 0x88
 8000572:	0549      	lsls	r1, r1, #21
 8000574:	430a      	orrs	r2, r1
 8000576:	621a      	str	r2, [r3, #32]

    GPIOB->OTYPER |= (1U << 6) | (1U << 7); // Open-drain output type for I2C
 8000578:	4b16      	ldr	r3, [pc, #88]	@ (80005d4 <I2C_Init+0xa4>)
 800057a:	685a      	ldr	r2, [r3, #4]
 800057c:	4b15      	ldr	r3, [pc, #84]	@ (80005d4 <I2C_Init+0xa4>)
 800057e:	21c0      	movs	r1, #192	@ 0xc0
 8000580:	430a      	orrs	r2, r1
 8000582:	605a      	str	r2, [r3, #4]

    GPIOB->PUPDR &= ~((3U << (6 * 2)) | (3U << (7 * 2))); // Clear pull-up/down bits
 8000584:	4b13      	ldr	r3, [pc, #76]	@ (80005d4 <I2C_Init+0xa4>)
 8000586:	68da      	ldr	r2, [r3, #12]
 8000588:	4b12      	ldr	r3, [pc, #72]	@ (80005d4 <I2C_Init+0xa4>)
 800058a:	4913      	ldr	r1, [pc, #76]	@ (80005d8 <I2C_Init+0xa8>)
 800058c:	400a      	ands	r2, r1
 800058e:	60da      	str	r2, [r3, #12]
    GPIOB->PUPDR |= (1U << (6 * 2)) | (1U << (7 * 2));    // Enable pull-up resistors for PB6 and PB7
 8000590:	4b10      	ldr	r3, [pc, #64]	@ (80005d4 <I2C_Init+0xa4>)
 8000592:	68da      	ldr	r2, [r3, #12]
 8000594:	4b0f      	ldr	r3, [pc, #60]	@ (80005d4 <I2C_Init+0xa4>)
 8000596:	21a0      	movs	r1, #160	@ 0xa0
 8000598:	01c9      	lsls	r1, r1, #7
 800059a:	430a      	orrs	r2, r1
 800059c:	60da      	str	r2, [r3, #12]

    // Enable I2C1 clock
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 800059e:	4b0c      	ldr	r3, [pc, #48]	@ (80005d0 <I2C_Init+0xa0>)
 80005a0:	69da      	ldr	r2, [r3, #28]
 80005a2:	4b0b      	ldr	r3, [pc, #44]	@ (80005d0 <I2C_Init+0xa0>)
 80005a4:	2180      	movs	r1, #128	@ 0x80
 80005a6:	0389      	lsls	r1, r1, #14
 80005a8:	430a      	orrs	r2, r1
 80005aa:	61da      	str	r2, [r3, #28]

    // Configure I2C timing for ~40 kHz
    I2C1->CR1 &= ~I2C_CR1_PE;  // Disable I2C
 80005ac:	4b0b      	ldr	r3, [pc, #44]	@ (80005dc <I2C_Init+0xac>)
 80005ae:	681a      	ldr	r2, [r3, #0]
 80005b0:	4b0a      	ldr	r3, [pc, #40]	@ (80005dc <I2C_Init+0xac>)
 80005b2:	2101      	movs	r1, #1
 80005b4:	438a      	bics	r2, r1
 80005b6:	601a      	str	r2, [r3, #0]
    // Step 3: Configure and initialize I2C1
    I2C1->TIMINGR = 0x12423030;  // Configure timing for 100kHz I2C (example)
 80005b8:	4b08      	ldr	r3, [pc, #32]	@ (80005dc <I2C_Init+0xac>)
 80005ba:	4a09      	ldr	r2, [pc, #36]	@ (80005e0 <I2C_Init+0xb0>)
 80005bc:	611a      	str	r2, [r3, #16]
    I2C1->CR1 |= I2C_CR1_PE;     // Enable I2C1
 80005be:	4b07      	ldr	r3, [pc, #28]	@ (80005dc <I2C_Init+0xac>)
 80005c0:	681a      	ldr	r2, [r3, #0]
 80005c2:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <I2C_Init+0xac>)
 80005c4:	2101      	movs	r1, #1
 80005c6:	430a      	orrs	r2, r1
 80005c8:	601a      	str	r2, [r3, #0]
}
 80005ca:	46c0      	nop			@ (mov r8, r8)
 80005cc:	46bd      	mov	sp, r7
 80005ce:	bd80      	pop	{r7, pc}
 80005d0:	40021000 	.word	0x40021000
 80005d4:	48000400 	.word	0x48000400
 80005d8:	ffff0fff 	.word	0xffff0fff
 80005dc:	40005400 	.word	0x40005400
 80005e0:	12423030 	.word	0x12423030

080005e4 <delay_ms>:


void delay_ms(uint32_t ms) {
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b084      	sub	sp, #16
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
    for (uint32_t i = 0; i < ms; i++) {
 80005ec:	2300      	movs	r3, #0
 80005ee:	60fb      	str	r3, [r7, #12]
 80005f0:	e00e      	b.n	8000610 <delay_ms+0x2c>
        for (uint32_t j = 0; j < 4000; j++) {
 80005f2:	2300      	movs	r3, #0
 80005f4:	60bb      	str	r3, [r7, #8]
 80005f6:	e003      	b.n	8000600 <delay_ms+0x1c>
            __NOP(); // No operation, keeps the loop busy
 80005f8:	46c0      	nop			@ (mov r8, r8)
        for (uint32_t j = 0; j < 4000; j++) {
 80005fa:	68bb      	ldr	r3, [r7, #8]
 80005fc:	3301      	adds	r3, #1
 80005fe:	60bb      	str	r3, [r7, #8]
 8000600:	68ba      	ldr	r2, [r7, #8]
 8000602:	23fa      	movs	r3, #250	@ 0xfa
 8000604:	011b      	lsls	r3, r3, #4
 8000606:	429a      	cmp	r2, r3
 8000608:	d3f6      	bcc.n	80005f8 <delay_ms+0x14>
    for (uint32_t i = 0; i < ms; i++) {
 800060a:	68fb      	ldr	r3, [r7, #12]
 800060c:	3301      	adds	r3, #1
 800060e:	60fb      	str	r3, [r7, #12]
 8000610:	68fa      	ldr	r2, [r7, #12]
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	429a      	cmp	r2, r3
 8000616:	d3ec      	bcc.n	80005f2 <delay_ms+0xe>
        }
    }
}
 8000618:	46c0      	nop			@ (mov r8, r8)
 800061a:	46c0      	nop			@ (mov r8, r8)
 800061c:	46bd      	mov	sp, r7
 800061e:	b004      	add	sp, #16
 8000620:	bd80      	pop	{r7, pc}
	...

08000624 <ReadUSS>:
    // Configure PA5 as output
    GPIOA->MODER &= ~(3U << (5 * 2)); // Clear mode bits for PA5
    GPIOA->MODER |= (1U << (5 * 2));  // Set PA5 to output mode
}

float ReadUSS(void) {
 8000624:	b580      	push	{r7, lr}
 8000626:	b086      	sub	sp, #24
 8000628:	af00      	add	r7, sp, #0
    uint8_t command = 0x01;       // Command to request measurement
 800062a:	230f      	movs	r3, #15
 800062c:	18fb      	adds	r3, r7, r3
 800062e:	2201      	movs	r2, #1
 8000630:	701a      	strb	r2, [r3, #0]
    uint8_t data[3] = {0};        // Buffer to hold received data
 8000632:	1d3b      	adds	r3, r7, #4
 8000634:	4a50      	ldr	r2, [pc, #320]	@ (8000778 <ReadUSS+0x154>)
 8000636:	8812      	ldrh	r2, [r2, #0]
 8000638:	801a      	strh	r2, [r3, #0]
 800063a:	2202      	movs	r2, #2
 800063c:	2100      	movs	r1, #0
 800063e:	5499      	strb	r1, [r3, r2]
    uint32_t raw_distance = 0;    // Raw distance data
 8000640:	2300      	movs	r3, #0
 8000642:	60bb      	str	r3, [r7, #8]
    uint32_t timeout;

    // Send START condition and command (write transaction)
    I2C1->CR2 = (I2C_ADDRESS << 1) | (1 << 16) | I2C_CR2_START; // Write address + 1 byte
 8000644:	4b4d      	ldr	r3, [pc, #308]	@ (800077c <ReadUSS+0x158>)
 8000646:	4a4e      	ldr	r2, [pc, #312]	@ (8000780 <ReadUSS+0x15c>)
 8000648:	605a      	str	r2, [r3, #4]
    timeout = TIMEOUT;
 800064a:	4b4e      	ldr	r3, [pc, #312]	@ (8000784 <ReadUSS+0x160>)
 800064c:	617b      	str	r3, [r7, #20]
    while (!(I2C1->ISR & I2C_ISR_TXIS) && --timeout); // Wait for TXIS
 800064e:	46c0      	nop			@ (mov r8, r8)
 8000650:	4b4a      	ldr	r3, [pc, #296]	@ (800077c <ReadUSS+0x158>)
 8000652:	699b      	ldr	r3, [r3, #24]
 8000654:	2202      	movs	r2, #2
 8000656:	4013      	ands	r3, r2
 8000658:	d105      	bne.n	8000666 <ReadUSS+0x42>
 800065a:	697b      	ldr	r3, [r7, #20]
 800065c:	3b01      	subs	r3, #1
 800065e:	617b      	str	r3, [r7, #20]
 8000660:	697b      	ldr	r3, [r7, #20]
 8000662:	2b00      	cmp	r3, #0
 8000664:	d1f4      	bne.n	8000650 <ReadUSS+0x2c>
    if (timeout == 0) {
 8000666:	697b      	ldr	r3, [r7, #20]
 8000668:	2b00      	cmp	r3, #0
 800066a:	d101      	bne.n	8000670 <ReadUSS+0x4c>
        return -1.0f; // Timeout error
 800066c:	4b46      	ldr	r3, [pc, #280]	@ (8000788 <ReadUSS+0x164>)
 800066e:	e07e      	b.n	800076e <ReadUSS+0x14a>
    }
    I2C1->TXDR = command; // Send the command byte
 8000670:	4b42      	ldr	r3, [pc, #264]	@ (800077c <ReadUSS+0x158>)
 8000672:	220f      	movs	r2, #15
 8000674:	18ba      	adds	r2, r7, r2
 8000676:	7812      	ldrb	r2, [r2, #0]
 8000678:	629a      	str	r2, [r3, #40]	@ 0x28

    // Wait for transfer complete
    timeout = TIMEOUT;
 800067a:	4b42      	ldr	r3, [pc, #264]	@ (8000784 <ReadUSS+0x160>)
 800067c:	617b      	str	r3, [r7, #20]
    while (!(I2C1->ISR & I2C_ISR_TC) && --timeout);
 800067e:	46c0      	nop			@ (mov r8, r8)
 8000680:	4b3e      	ldr	r3, [pc, #248]	@ (800077c <ReadUSS+0x158>)
 8000682:	699b      	ldr	r3, [r3, #24]
 8000684:	2240      	movs	r2, #64	@ 0x40
 8000686:	4013      	ands	r3, r2
 8000688:	d105      	bne.n	8000696 <ReadUSS+0x72>
 800068a:	697b      	ldr	r3, [r7, #20]
 800068c:	3b01      	subs	r3, #1
 800068e:	617b      	str	r3, [r7, #20]
 8000690:	697b      	ldr	r3, [r7, #20]
 8000692:	2b00      	cmp	r3, #0
 8000694:	d1f4      	bne.n	8000680 <ReadUSS+0x5c>
    if (timeout == 0) {
 8000696:	697b      	ldr	r3, [r7, #20]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d101      	bne.n	80006a0 <ReadUSS+0x7c>
        return -1.0f; // Timeout error
 800069c:	4b3a      	ldr	r3, [pc, #232]	@ (8000788 <ReadUSS+0x164>)
 800069e:	e066      	b.n	800076e <ReadUSS+0x14a>
    }

    // Send STOP condition manually
    I2C1->CR2 |= I2C_CR2_STOP;
 80006a0:	4b36      	ldr	r3, [pc, #216]	@ (800077c <ReadUSS+0x158>)
 80006a2:	685a      	ldr	r2, [r3, #4]
 80006a4:	4b35      	ldr	r3, [pc, #212]	@ (800077c <ReadUSS+0x158>)
 80006a6:	2180      	movs	r1, #128	@ 0x80
 80006a8:	01c9      	lsls	r1, r1, #7
 80006aa:	430a      	orrs	r2, r1
 80006ac:	605a      	str	r2, [r3, #4]
    while (!(I2C1->ISR & I2C_ISR_STOPF)); // Wait for STOP flag
 80006ae:	46c0      	nop			@ (mov r8, r8)
 80006b0:	4b32      	ldr	r3, [pc, #200]	@ (800077c <ReadUSS+0x158>)
 80006b2:	699b      	ldr	r3, [r3, #24]
 80006b4:	2220      	movs	r2, #32
 80006b6:	4013      	ands	r3, r2
 80006b8:	d0fa      	beq.n	80006b0 <ReadUSS+0x8c>
    I2C1->ICR |= I2C_ICR_STOPCF; // Clear STOP flag
 80006ba:	4b30      	ldr	r3, [pc, #192]	@ (800077c <ReadUSS+0x158>)
 80006bc:	69da      	ldr	r2, [r3, #28]
 80006be:	4b2f      	ldr	r3, [pc, #188]	@ (800077c <ReadUSS+0x158>)
 80006c0:	2120      	movs	r1, #32
 80006c2:	430a      	orrs	r2, r1
 80006c4:	61da      	str	r2, [r3, #28]

    // Delay to allow the USS module to process the request
    delay_ms(120);
 80006c6:	2078      	movs	r0, #120	@ 0x78
 80006c8:	f7ff ff8c 	bl	80005e4 <delay_ms>

    // Configure for repeated START and read transaction
    I2C1->CR2 = (I2C_ADDRESS << 1) | (3 << 16) | I2C_CR2_RD_WRN | I2C_CR2_START;
 80006cc:	4b2b      	ldr	r3, [pc, #172]	@ (800077c <ReadUSS+0x158>)
 80006ce:	4a2f      	ldr	r2, [pc, #188]	@ (800078c <ReadUSS+0x168>)
 80006d0:	605a      	str	r2, [r3, #4]

    // Read the data bytes
    for (int i = 0; i < 3; i++) {
 80006d2:	2300      	movs	r3, #0
 80006d4:	613b      	str	r3, [r7, #16]
 80006d6:	e027      	b.n	8000728 <ReadUSS+0x104>
        timeout = TIMEOUT;
 80006d8:	4b2a      	ldr	r3, [pc, #168]	@ (8000784 <ReadUSS+0x160>)
 80006da:	617b      	str	r3, [r7, #20]
        while (!(I2C1->ISR & I2C_ISR_RXNE) && --timeout);
 80006dc:	46c0      	nop			@ (mov r8, r8)
 80006de:	4b27      	ldr	r3, [pc, #156]	@ (800077c <ReadUSS+0x158>)
 80006e0:	699b      	ldr	r3, [r3, #24]
 80006e2:	2204      	movs	r2, #4
 80006e4:	4013      	ands	r3, r2
 80006e6:	d105      	bne.n	80006f4 <ReadUSS+0xd0>
 80006e8:	697b      	ldr	r3, [r7, #20]
 80006ea:	3b01      	subs	r3, #1
 80006ec:	617b      	str	r3, [r7, #20]
 80006ee:	697b      	ldr	r3, [r7, #20]
 80006f0:	2b00      	cmp	r3, #0
 80006f2:	d1f4      	bne.n	80006de <ReadUSS+0xba>
        if (timeout == 0) {
 80006f4:	697b      	ldr	r3, [r7, #20]
 80006f6:	2b00      	cmp	r3, #0
 80006f8:	d101      	bne.n	80006fe <ReadUSS+0xda>
            return -1.0f; // Timeout error
 80006fa:	4b23      	ldr	r3, [pc, #140]	@ (8000788 <ReadUSS+0x164>)
 80006fc:	e037      	b.n	800076e <ReadUSS+0x14a>
        }
        data[i] = I2C1->RXDR; // Read received byte
 80006fe:	4b1f      	ldr	r3, [pc, #124]	@ (800077c <ReadUSS+0x158>)
 8000700:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000702:	b2d9      	uxtb	r1, r3
 8000704:	1d3a      	adds	r2, r7, #4
 8000706:	693b      	ldr	r3, [r7, #16]
 8000708:	18d3      	adds	r3, r2, r3
 800070a:	1c0a      	adds	r2, r1, #0
 800070c:	701a      	strb	r2, [r3, #0]
        printf("data: %d", data[i]);
 800070e:	1d3a      	adds	r2, r7, #4
 8000710:	693b      	ldr	r3, [r7, #16]
 8000712:	18d3      	adds	r3, r2, r3
 8000714:	781b      	ldrb	r3, [r3, #0]
 8000716:	001a      	movs	r2, r3
 8000718:	4b1d      	ldr	r3, [pc, #116]	@ (8000790 <ReadUSS+0x16c>)
 800071a:	0011      	movs	r1, r2
 800071c:	0018      	movs	r0, r3
 800071e:	f000 fa05 	bl	8000b2c <iprintf>
    for (int i = 0; i < 3; i++) {
 8000722:	693b      	ldr	r3, [r7, #16]
 8000724:	3301      	adds	r3, #1
 8000726:	613b      	str	r3, [r7, #16]
 8000728:	693b      	ldr	r3, [r7, #16]
 800072a:	2b02      	cmp	r3, #2
 800072c:	ddd4      	ble.n	80006d8 <ReadUSS+0xb4>
    }

    I2C1->ICR |= I2C_ICR_STOPCF;
 800072e:	4b13      	ldr	r3, [pc, #76]	@ (800077c <ReadUSS+0x158>)
 8000730:	69da      	ldr	r2, [r3, #28]
 8000732:	4b12      	ldr	r3, [pc, #72]	@ (800077c <ReadUSS+0x158>)
 8000734:	2120      	movs	r1, #32
 8000736:	430a      	orrs	r2, r1
 8000738:	61da      	str	r2, [r3, #28]

    // Combine the 3 bytes into a 24-bit value
    raw_distance = ((uint32_t)data[0] << 16) | ((uint32_t)data[1] << 8) | ((uint32_t)data[2]);
 800073a:	1d3b      	adds	r3, r7, #4
 800073c:	781b      	ldrb	r3, [r3, #0]
 800073e:	041a      	lsls	r2, r3, #16
 8000740:	1d3b      	adds	r3, r7, #4
 8000742:	785b      	ldrb	r3, [r3, #1]
 8000744:	021b      	lsls	r3, r3, #8
 8000746:	4313      	orrs	r3, r2
 8000748:	1d3a      	adds	r2, r7, #4
 800074a:	7892      	ldrb	r2, [r2, #2]
 800074c:	4313      	orrs	r3, r2
 800074e:	60bb      	str	r3, [r7, #8]
    printf("dist: %d", raw_distance);
 8000750:	68ba      	ldr	r2, [r7, #8]
 8000752:	4b10      	ldr	r3, [pc, #64]	@ (8000794 <ReadUSS+0x170>)
 8000754:	0011      	movs	r1, r2
 8000756:	0018      	movs	r0, r3
 8000758:	f000 f9e8 	bl	8000b2c <iprintf>

    // Convert raw distance to meters and return
    return raw_distance / 1000.0f;
 800075c:	68b8      	ldr	r0, [r7, #8]
 800075e:	f7ff fe87 	bl	8000470 <__aeabi_ui2f>
 8000762:	1c03      	adds	r3, r0, #0
 8000764:	490c      	ldr	r1, [pc, #48]	@ (8000798 <ReadUSS+0x174>)
 8000766:	1c18      	adds	r0, r3, #0
 8000768:	f7ff fd62 	bl	8000230 <__aeabi_fdiv>
 800076c:	1c03      	adds	r3, r0, #0
}
 800076e:	1c18      	adds	r0, r3, #0
 8000770:	46bd      	mov	sp, r7
 8000772:	b006      	add	sp, #24
 8000774:	bd80      	pop	{r7, pc}
 8000776:	46c0      	nop			@ (mov r8, r8)
 8000778:	08001898 	.word	0x08001898
 800077c:	40005400 	.word	0x40005400
 8000780:	000120ae 	.word	0x000120ae
 8000784:	000186a0 	.word	0x000186a0
 8000788:	bf800000 	.word	0xbf800000
 800078c:	000324ae 	.word	0x000324ae
 8000790:	08001880 	.word	0x08001880
 8000794:	0800188c 	.word	0x0800188c
 8000798:	447a0000 	.word	0x447a0000

0800079c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800079c:	b580      	push	{r7, lr}
 800079e:	b082      	sub	sp, #8
 80007a0:	af00      	add	r7, sp, #0
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	float distance;
  I2C_Init();
 80007a2:	f7ff fec5 	bl	8000530 <I2C_Init>
  while (1)
  {
    /* USER CODE END WHILE */
      // Read distance from the USS module
      distance = ReadUSS();
 80007a6:	f7ff ff3d 	bl	8000624 <ReadUSS>
 80007aa:	1c03      	adds	r3, r0, #0
 80007ac:	607b      	str	r3, [r7, #4]
      // Check and print the distance
      if (distance > 0.02f && distance < 1.5f) {
          // Replace this with UART or display code as needed
      }

      delay_ms(100); // Delay between measurements
 80007ae:	2064      	movs	r0, #100	@ 0x64
 80007b0:	f7ff ff18 	bl	80005e4 <delay_ms>
      distance = ReadUSS();
 80007b4:	e7f7      	b.n	80007a6 <main+0xa>

080007b6 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80007b6:	b580      	push	{r7, lr}
 80007b8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80007ba:	46c0      	nop			@ (mov r8, r8)
 80007bc:	e7fd      	b.n	80007ba <NMI_Handler+0x4>

080007be <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80007be:	b580      	push	{r7, lr}
 80007c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80007c2:	46c0      	nop			@ (mov r8, r8)
 80007c4:	e7fd      	b.n	80007c2 <HardFault_Handler+0x4>

080007c6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80007c6:	b580      	push	{r7, lr}
 80007c8:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80007ca:	46c0      	nop			@ (mov r8, r8)
 80007cc:	46bd      	mov	sp, r7
 80007ce:	bd80      	pop	{r7, pc}

080007d0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80007d0:	b580      	push	{r7, lr}
 80007d2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80007d4:	46c0      	nop			@ (mov r8, r8)
 80007d6:	46bd      	mov	sp, r7
 80007d8:	bd80      	pop	{r7, pc}

080007da <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80007da:	b580      	push	{r7, lr}
 80007dc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80007de:	f000 f8cf 	bl	8000980 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80007e2:	46c0      	nop			@ (mov r8, r8)
 80007e4:	46bd      	mov	sp, r7
 80007e6:	bd80      	pop	{r7, pc}

080007e8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80007e8:	b580      	push	{r7, lr}
 80007ea:	b086      	sub	sp, #24
 80007ec:	af00      	add	r7, sp, #0
 80007ee:	60f8      	str	r0, [r7, #12]
 80007f0:	60b9      	str	r1, [r7, #8]
 80007f2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80007f4:	2300      	movs	r3, #0
 80007f6:	617b      	str	r3, [r7, #20]
 80007f8:	e00a      	b.n	8000810 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80007fa:	e000      	b.n	80007fe <_read+0x16>
 80007fc:	bf00      	nop
 80007fe:	0001      	movs	r1, r0
 8000800:	68bb      	ldr	r3, [r7, #8]
 8000802:	1c5a      	adds	r2, r3, #1
 8000804:	60ba      	str	r2, [r7, #8]
 8000806:	b2ca      	uxtb	r2, r1
 8000808:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800080a:	697b      	ldr	r3, [r7, #20]
 800080c:	3301      	adds	r3, #1
 800080e:	617b      	str	r3, [r7, #20]
 8000810:	697a      	ldr	r2, [r7, #20]
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	429a      	cmp	r2, r3
 8000816:	dbf0      	blt.n	80007fa <_read+0x12>
  }

  return len;
 8000818:	687b      	ldr	r3, [r7, #4]
}
 800081a:	0018      	movs	r0, r3
 800081c:	46bd      	mov	sp, r7
 800081e:	b006      	add	sp, #24
 8000820:	bd80      	pop	{r7, pc}

08000822 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000822:	b580      	push	{r7, lr}
 8000824:	b086      	sub	sp, #24
 8000826:	af00      	add	r7, sp, #0
 8000828:	60f8      	str	r0, [r7, #12]
 800082a:	60b9      	str	r1, [r7, #8]
 800082c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800082e:	2300      	movs	r3, #0
 8000830:	617b      	str	r3, [r7, #20]
 8000832:	e009      	b.n	8000848 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000834:	68bb      	ldr	r3, [r7, #8]
 8000836:	1c5a      	adds	r2, r3, #1
 8000838:	60ba      	str	r2, [r7, #8]
 800083a:	781b      	ldrb	r3, [r3, #0]
 800083c:	0018      	movs	r0, r3
 800083e:	e000      	b.n	8000842 <_write+0x20>
 8000840:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000842:	697b      	ldr	r3, [r7, #20]
 8000844:	3301      	adds	r3, #1
 8000846:	617b      	str	r3, [r7, #20]
 8000848:	697a      	ldr	r2, [r7, #20]
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	429a      	cmp	r2, r3
 800084e:	dbf1      	blt.n	8000834 <_write+0x12>
  }
  return len;
 8000850:	687b      	ldr	r3, [r7, #4]
}
 8000852:	0018      	movs	r0, r3
 8000854:	46bd      	mov	sp, r7
 8000856:	b006      	add	sp, #24
 8000858:	bd80      	pop	{r7, pc}

0800085a <_close>:

int _close(int file)
{
 800085a:	b580      	push	{r7, lr}
 800085c:	b082      	sub	sp, #8
 800085e:	af00      	add	r7, sp, #0
 8000860:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000862:	2301      	movs	r3, #1
 8000864:	425b      	negs	r3, r3
}
 8000866:	0018      	movs	r0, r3
 8000868:	46bd      	mov	sp, r7
 800086a:	b002      	add	sp, #8
 800086c:	bd80      	pop	{r7, pc}

0800086e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800086e:	b580      	push	{r7, lr}
 8000870:	b082      	sub	sp, #8
 8000872:	af00      	add	r7, sp, #0
 8000874:	6078      	str	r0, [r7, #4]
 8000876:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000878:	683b      	ldr	r3, [r7, #0]
 800087a:	2280      	movs	r2, #128	@ 0x80
 800087c:	0192      	lsls	r2, r2, #6
 800087e:	605a      	str	r2, [r3, #4]
  return 0;
 8000880:	2300      	movs	r3, #0
}
 8000882:	0018      	movs	r0, r3
 8000884:	46bd      	mov	sp, r7
 8000886:	b002      	add	sp, #8
 8000888:	bd80      	pop	{r7, pc}

0800088a <_isatty>:

int _isatty(int file)
{
 800088a:	b580      	push	{r7, lr}
 800088c:	b082      	sub	sp, #8
 800088e:	af00      	add	r7, sp, #0
 8000890:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000892:	2301      	movs	r3, #1
}
 8000894:	0018      	movs	r0, r3
 8000896:	46bd      	mov	sp, r7
 8000898:	b002      	add	sp, #8
 800089a:	bd80      	pop	{r7, pc}

0800089c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800089c:	b580      	push	{r7, lr}
 800089e:	b084      	sub	sp, #16
 80008a0:	af00      	add	r7, sp, #0
 80008a2:	60f8      	str	r0, [r7, #12]
 80008a4:	60b9      	str	r1, [r7, #8]
 80008a6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80008a8:	2300      	movs	r3, #0
}
 80008aa:	0018      	movs	r0, r3
 80008ac:	46bd      	mov	sp, r7
 80008ae:	b004      	add	sp, #16
 80008b0:	bd80      	pop	{r7, pc}
	...

080008b4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80008b4:	b580      	push	{r7, lr}
 80008b6:	b086      	sub	sp, #24
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80008bc:	4a14      	ldr	r2, [pc, #80]	@ (8000910 <_sbrk+0x5c>)
 80008be:	4b15      	ldr	r3, [pc, #84]	@ (8000914 <_sbrk+0x60>)
 80008c0:	1ad3      	subs	r3, r2, r3
 80008c2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80008c4:	697b      	ldr	r3, [r7, #20]
 80008c6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80008c8:	4b13      	ldr	r3, [pc, #76]	@ (8000918 <_sbrk+0x64>)
 80008ca:	681b      	ldr	r3, [r3, #0]
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d102      	bne.n	80008d6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80008d0:	4b11      	ldr	r3, [pc, #68]	@ (8000918 <_sbrk+0x64>)
 80008d2:	4a12      	ldr	r2, [pc, #72]	@ (800091c <_sbrk+0x68>)
 80008d4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80008d6:	4b10      	ldr	r3, [pc, #64]	@ (8000918 <_sbrk+0x64>)
 80008d8:	681a      	ldr	r2, [r3, #0]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	18d3      	adds	r3, r2, r3
 80008de:	693a      	ldr	r2, [r7, #16]
 80008e0:	429a      	cmp	r2, r3
 80008e2:	d207      	bcs.n	80008f4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80008e4:	f000 f9d4 	bl	8000c90 <__errno>
 80008e8:	0003      	movs	r3, r0
 80008ea:	220c      	movs	r2, #12
 80008ec:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80008ee:	2301      	movs	r3, #1
 80008f0:	425b      	negs	r3, r3
 80008f2:	e009      	b.n	8000908 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80008f4:	4b08      	ldr	r3, [pc, #32]	@ (8000918 <_sbrk+0x64>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80008fa:	4b07      	ldr	r3, [pc, #28]	@ (8000918 <_sbrk+0x64>)
 80008fc:	681a      	ldr	r2, [r3, #0]
 80008fe:	687b      	ldr	r3, [r7, #4]
 8000900:	18d2      	adds	r2, r2, r3
 8000902:	4b05      	ldr	r3, [pc, #20]	@ (8000918 <_sbrk+0x64>)
 8000904:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000906:	68fb      	ldr	r3, [r7, #12]
}
 8000908:	0018      	movs	r0, r3
 800090a:	46bd      	mov	sp, r7
 800090c:	b006      	add	sp, #24
 800090e:	bd80      	pop	{r7, pc}
 8000910:	20008000 	.word	0x20008000
 8000914:	00000400 	.word	0x00000400
 8000918:	2000007c 	.word	0x2000007c
 800091c:	200001d0 	.word	0x200001d0

08000920 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000920:	b580      	push	{r7, lr}
 8000922:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8000924:	46c0      	nop			@ (mov r8, r8)
 8000926:	46bd      	mov	sp, r7
 8000928:	bd80      	pop	{r7, pc}
	...

0800092c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800092c:	480d      	ldr	r0, [pc, #52]	@ (8000964 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800092e:	4685      	mov	sp, r0
  
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000930:	f7ff fff6 	bl	8000920 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000934:	480c      	ldr	r0, [pc, #48]	@ (8000968 <LoopForever+0x6>)
  ldr r1, =_edata
 8000936:	490d      	ldr	r1, [pc, #52]	@ (800096c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000938:	4a0d      	ldr	r2, [pc, #52]	@ (8000970 <LoopForever+0xe>)
  movs r3, #0
 800093a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800093c:	e002      	b.n	8000944 <LoopCopyDataInit>

0800093e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800093e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000940:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000942:	3304      	adds	r3, #4

08000944 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000944:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000946:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000948:	d3f9      	bcc.n	800093e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800094a:	4a0a      	ldr	r2, [pc, #40]	@ (8000974 <LoopForever+0x12>)
  ldr r4, =_ebss
 800094c:	4c0a      	ldr	r4, [pc, #40]	@ (8000978 <LoopForever+0x16>)
  movs r3, #0
 800094e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000950:	e001      	b.n	8000956 <LoopFillZerobss>

08000952 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000952:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000954:	3204      	adds	r2, #4

08000956 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000956:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000958:	d3fb      	bcc.n	8000952 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800095a:	f000 f99f 	bl	8000c9c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800095e:	f7ff ff1d 	bl	800079c <main>

08000962 <LoopForever>:

LoopForever:
    b LoopForever
 8000962:	e7fe      	b.n	8000962 <LoopForever>
  ldr   r0, =_estack
 8000964:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000968:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800096c:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000970:	08001954 	.word	0x08001954
  ldr r2, =_sbss
 8000974:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000978:	200001d0 	.word	0x200001d0

0800097c <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800097c:	e7fe      	b.n	800097c <ADC1_COMP_IRQHandler>
	...

08000980 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000980:	b580      	push	{r7, lr}
 8000982:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000984:	4b05      	ldr	r3, [pc, #20]	@ (800099c <HAL_IncTick+0x1c>)
 8000986:	781b      	ldrb	r3, [r3, #0]
 8000988:	001a      	movs	r2, r3
 800098a:	4b05      	ldr	r3, [pc, #20]	@ (80009a0 <HAL_IncTick+0x20>)
 800098c:	681b      	ldr	r3, [r3, #0]
 800098e:	18d2      	adds	r2, r2, r3
 8000990:	4b03      	ldr	r3, [pc, #12]	@ (80009a0 <HAL_IncTick+0x20>)
 8000992:	601a      	str	r2, [r3, #0]
}
 8000994:	46c0      	nop			@ (mov r8, r8)
 8000996:	46bd      	mov	sp, r7
 8000998:	bd80      	pop	{r7, pc}
 800099a:	46c0      	nop			@ (mov r8, r8)
 800099c:	20000000 	.word	0x20000000
 80009a0:	20000080 	.word	0x20000080

080009a4 <std>:
 80009a4:	2300      	movs	r3, #0
 80009a6:	b510      	push	{r4, lr}
 80009a8:	0004      	movs	r4, r0
 80009aa:	6003      	str	r3, [r0, #0]
 80009ac:	6043      	str	r3, [r0, #4]
 80009ae:	6083      	str	r3, [r0, #8]
 80009b0:	8181      	strh	r1, [r0, #12]
 80009b2:	6643      	str	r3, [r0, #100]	@ 0x64
 80009b4:	81c2      	strh	r2, [r0, #14]
 80009b6:	6103      	str	r3, [r0, #16]
 80009b8:	6143      	str	r3, [r0, #20]
 80009ba:	6183      	str	r3, [r0, #24]
 80009bc:	0019      	movs	r1, r3
 80009be:	2208      	movs	r2, #8
 80009c0:	305c      	adds	r0, #92	@ 0x5c
 80009c2:	f000 f90f 	bl	8000be4 <memset>
 80009c6:	4b0b      	ldr	r3, [pc, #44]	@ (80009f4 <std+0x50>)
 80009c8:	6224      	str	r4, [r4, #32]
 80009ca:	6263      	str	r3, [r4, #36]	@ 0x24
 80009cc:	4b0a      	ldr	r3, [pc, #40]	@ (80009f8 <std+0x54>)
 80009ce:	62a3      	str	r3, [r4, #40]	@ 0x28
 80009d0:	4b0a      	ldr	r3, [pc, #40]	@ (80009fc <std+0x58>)
 80009d2:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80009d4:	4b0a      	ldr	r3, [pc, #40]	@ (8000a00 <std+0x5c>)
 80009d6:	6323      	str	r3, [r4, #48]	@ 0x30
 80009d8:	4b0a      	ldr	r3, [pc, #40]	@ (8000a04 <std+0x60>)
 80009da:	429c      	cmp	r4, r3
 80009dc:	d005      	beq.n	80009ea <std+0x46>
 80009de:	4b0a      	ldr	r3, [pc, #40]	@ (8000a08 <std+0x64>)
 80009e0:	429c      	cmp	r4, r3
 80009e2:	d002      	beq.n	80009ea <std+0x46>
 80009e4:	4b09      	ldr	r3, [pc, #36]	@ (8000a0c <std+0x68>)
 80009e6:	429c      	cmp	r4, r3
 80009e8:	d103      	bne.n	80009f2 <std+0x4e>
 80009ea:	0020      	movs	r0, r4
 80009ec:	3058      	adds	r0, #88	@ 0x58
 80009ee:	f000 f979 	bl	8000ce4 <__retarget_lock_init_recursive>
 80009f2:	bd10      	pop	{r4, pc}
 80009f4:	08000b4d 	.word	0x08000b4d
 80009f8:	08000b75 	.word	0x08000b75
 80009fc:	08000bad 	.word	0x08000bad
 8000a00:	08000bd9 	.word	0x08000bd9
 8000a04:	20000084 	.word	0x20000084
 8000a08:	200000ec 	.word	0x200000ec
 8000a0c:	20000154 	.word	0x20000154

08000a10 <stdio_exit_handler>:
 8000a10:	b510      	push	{r4, lr}
 8000a12:	4a03      	ldr	r2, [pc, #12]	@ (8000a20 <stdio_exit_handler+0x10>)
 8000a14:	4903      	ldr	r1, [pc, #12]	@ (8000a24 <stdio_exit_handler+0x14>)
 8000a16:	4804      	ldr	r0, [pc, #16]	@ (8000a28 <stdio_exit_handler+0x18>)
 8000a18:	f000 f86c 	bl	8000af4 <_fwalk_sglue>
 8000a1c:	bd10      	pop	{r4, pc}
 8000a1e:	46c0      	nop			@ (mov r8, r8)
 8000a20:	20000004 	.word	0x20000004
 8000a24:	08001575 	.word	0x08001575
 8000a28:	20000014 	.word	0x20000014

08000a2c <cleanup_stdio>:
 8000a2c:	6841      	ldr	r1, [r0, #4]
 8000a2e:	4b0b      	ldr	r3, [pc, #44]	@ (8000a5c <cleanup_stdio+0x30>)
 8000a30:	b510      	push	{r4, lr}
 8000a32:	0004      	movs	r4, r0
 8000a34:	4299      	cmp	r1, r3
 8000a36:	d001      	beq.n	8000a3c <cleanup_stdio+0x10>
 8000a38:	f000 fd9c 	bl	8001574 <_fflush_r>
 8000a3c:	68a1      	ldr	r1, [r4, #8]
 8000a3e:	4b08      	ldr	r3, [pc, #32]	@ (8000a60 <cleanup_stdio+0x34>)
 8000a40:	4299      	cmp	r1, r3
 8000a42:	d002      	beq.n	8000a4a <cleanup_stdio+0x1e>
 8000a44:	0020      	movs	r0, r4
 8000a46:	f000 fd95 	bl	8001574 <_fflush_r>
 8000a4a:	68e1      	ldr	r1, [r4, #12]
 8000a4c:	4b05      	ldr	r3, [pc, #20]	@ (8000a64 <cleanup_stdio+0x38>)
 8000a4e:	4299      	cmp	r1, r3
 8000a50:	d002      	beq.n	8000a58 <cleanup_stdio+0x2c>
 8000a52:	0020      	movs	r0, r4
 8000a54:	f000 fd8e 	bl	8001574 <_fflush_r>
 8000a58:	bd10      	pop	{r4, pc}
 8000a5a:	46c0      	nop			@ (mov r8, r8)
 8000a5c:	20000084 	.word	0x20000084
 8000a60:	200000ec 	.word	0x200000ec
 8000a64:	20000154 	.word	0x20000154

08000a68 <global_stdio_init.part.0>:
 8000a68:	b510      	push	{r4, lr}
 8000a6a:	4b09      	ldr	r3, [pc, #36]	@ (8000a90 <global_stdio_init.part.0+0x28>)
 8000a6c:	4a09      	ldr	r2, [pc, #36]	@ (8000a94 <global_stdio_init.part.0+0x2c>)
 8000a6e:	2104      	movs	r1, #4
 8000a70:	601a      	str	r2, [r3, #0]
 8000a72:	4809      	ldr	r0, [pc, #36]	@ (8000a98 <global_stdio_init.part.0+0x30>)
 8000a74:	2200      	movs	r2, #0
 8000a76:	f7ff ff95 	bl	80009a4 <std>
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	2109      	movs	r1, #9
 8000a7e:	4807      	ldr	r0, [pc, #28]	@ (8000a9c <global_stdio_init.part.0+0x34>)
 8000a80:	f7ff ff90 	bl	80009a4 <std>
 8000a84:	2202      	movs	r2, #2
 8000a86:	2112      	movs	r1, #18
 8000a88:	4805      	ldr	r0, [pc, #20]	@ (8000aa0 <global_stdio_init.part.0+0x38>)
 8000a8a:	f7ff ff8b 	bl	80009a4 <std>
 8000a8e:	bd10      	pop	{r4, pc}
 8000a90:	200001bc 	.word	0x200001bc
 8000a94:	08000a11 	.word	0x08000a11
 8000a98:	20000084 	.word	0x20000084
 8000a9c:	200000ec 	.word	0x200000ec
 8000aa0:	20000154 	.word	0x20000154

08000aa4 <__sfp_lock_acquire>:
 8000aa4:	b510      	push	{r4, lr}
 8000aa6:	4802      	ldr	r0, [pc, #8]	@ (8000ab0 <__sfp_lock_acquire+0xc>)
 8000aa8:	f000 f91d 	bl	8000ce6 <__retarget_lock_acquire_recursive>
 8000aac:	bd10      	pop	{r4, pc}
 8000aae:	46c0      	nop			@ (mov r8, r8)
 8000ab0:	200001c5 	.word	0x200001c5

08000ab4 <__sfp_lock_release>:
 8000ab4:	b510      	push	{r4, lr}
 8000ab6:	4802      	ldr	r0, [pc, #8]	@ (8000ac0 <__sfp_lock_release+0xc>)
 8000ab8:	f000 f916 	bl	8000ce8 <__retarget_lock_release_recursive>
 8000abc:	bd10      	pop	{r4, pc}
 8000abe:	46c0      	nop			@ (mov r8, r8)
 8000ac0:	200001c5 	.word	0x200001c5

08000ac4 <__sinit>:
 8000ac4:	b510      	push	{r4, lr}
 8000ac6:	0004      	movs	r4, r0
 8000ac8:	f7ff ffec 	bl	8000aa4 <__sfp_lock_acquire>
 8000acc:	6a23      	ldr	r3, [r4, #32]
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d002      	beq.n	8000ad8 <__sinit+0x14>
 8000ad2:	f7ff ffef 	bl	8000ab4 <__sfp_lock_release>
 8000ad6:	bd10      	pop	{r4, pc}
 8000ad8:	4b04      	ldr	r3, [pc, #16]	@ (8000aec <__sinit+0x28>)
 8000ada:	6223      	str	r3, [r4, #32]
 8000adc:	4b04      	ldr	r3, [pc, #16]	@ (8000af0 <__sinit+0x2c>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	d1f6      	bne.n	8000ad2 <__sinit+0xe>
 8000ae4:	f7ff ffc0 	bl	8000a68 <global_stdio_init.part.0>
 8000ae8:	e7f3      	b.n	8000ad2 <__sinit+0xe>
 8000aea:	46c0      	nop			@ (mov r8, r8)
 8000aec:	08000a2d 	.word	0x08000a2d
 8000af0:	200001bc 	.word	0x200001bc

08000af4 <_fwalk_sglue>:
 8000af4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000af6:	0014      	movs	r4, r2
 8000af8:	2600      	movs	r6, #0
 8000afa:	9000      	str	r0, [sp, #0]
 8000afc:	9101      	str	r1, [sp, #4]
 8000afe:	68a5      	ldr	r5, [r4, #8]
 8000b00:	6867      	ldr	r7, [r4, #4]
 8000b02:	3f01      	subs	r7, #1
 8000b04:	d504      	bpl.n	8000b10 <_fwalk_sglue+0x1c>
 8000b06:	6824      	ldr	r4, [r4, #0]
 8000b08:	2c00      	cmp	r4, #0
 8000b0a:	d1f8      	bne.n	8000afe <_fwalk_sglue+0xa>
 8000b0c:	0030      	movs	r0, r6
 8000b0e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000b10:	89ab      	ldrh	r3, [r5, #12]
 8000b12:	2b01      	cmp	r3, #1
 8000b14:	d908      	bls.n	8000b28 <_fwalk_sglue+0x34>
 8000b16:	220e      	movs	r2, #14
 8000b18:	5eab      	ldrsh	r3, [r5, r2]
 8000b1a:	3301      	adds	r3, #1
 8000b1c:	d004      	beq.n	8000b28 <_fwalk_sglue+0x34>
 8000b1e:	0029      	movs	r1, r5
 8000b20:	9800      	ldr	r0, [sp, #0]
 8000b22:	9b01      	ldr	r3, [sp, #4]
 8000b24:	4798      	blx	r3
 8000b26:	4306      	orrs	r6, r0
 8000b28:	3568      	adds	r5, #104	@ 0x68
 8000b2a:	e7ea      	b.n	8000b02 <_fwalk_sglue+0xe>

08000b2c <iprintf>:
 8000b2c:	b40f      	push	{r0, r1, r2, r3}
 8000b2e:	b507      	push	{r0, r1, r2, lr}
 8000b30:	4905      	ldr	r1, [pc, #20]	@ (8000b48 <iprintf+0x1c>)
 8000b32:	ab04      	add	r3, sp, #16
 8000b34:	6808      	ldr	r0, [r1, #0]
 8000b36:	cb04      	ldmia	r3!, {r2}
 8000b38:	6881      	ldr	r1, [r0, #8]
 8000b3a:	9301      	str	r3, [sp, #4]
 8000b3c:	f000 f9fa 	bl	8000f34 <_vfiprintf_r>
 8000b40:	b003      	add	sp, #12
 8000b42:	bc08      	pop	{r3}
 8000b44:	b004      	add	sp, #16
 8000b46:	4718      	bx	r3
 8000b48:	20000010 	.word	0x20000010

08000b4c <__sread>:
 8000b4c:	b570      	push	{r4, r5, r6, lr}
 8000b4e:	000c      	movs	r4, r1
 8000b50:	250e      	movs	r5, #14
 8000b52:	5f49      	ldrsh	r1, [r1, r5]
 8000b54:	f000 f874 	bl	8000c40 <_read_r>
 8000b58:	2800      	cmp	r0, #0
 8000b5a:	db03      	blt.n	8000b64 <__sread+0x18>
 8000b5c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8000b5e:	181b      	adds	r3, r3, r0
 8000b60:	6563      	str	r3, [r4, #84]	@ 0x54
 8000b62:	bd70      	pop	{r4, r5, r6, pc}
 8000b64:	89a3      	ldrh	r3, [r4, #12]
 8000b66:	4a02      	ldr	r2, [pc, #8]	@ (8000b70 <__sread+0x24>)
 8000b68:	4013      	ands	r3, r2
 8000b6a:	81a3      	strh	r3, [r4, #12]
 8000b6c:	e7f9      	b.n	8000b62 <__sread+0x16>
 8000b6e:	46c0      	nop			@ (mov r8, r8)
 8000b70:	ffffefff 	.word	0xffffefff

08000b74 <__swrite>:
 8000b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b76:	001f      	movs	r7, r3
 8000b78:	898b      	ldrh	r3, [r1, #12]
 8000b7a:	0005      	movs	r5, r0
 8000b7c:	000c      	movs	r4, r1
 8000b7e:	0016      	movs	r6, r2
 8000b80:	05db      	lsls	r3, r3, #23
 8000b82:	d505      	bpl.n	8000b90 <__swrite+0x1c>
 8000b84:	230e      	movs	r3, #14
 8000b86:	5ec9      	ldrsh	r1, [r1, r3]
 8000b88:	2200      	movs	r2, #0
 8000b8a:	2302      	movs	r3, #2
 8000b8c:	f000 f844 	bl	8000c18 <_lseek_r>
 8000b90:	89a3      	ldrh	r3, [r4, #12]
 8000b92:	4a05      	ldr	r2, [pc, #20]	@ (8000ba8 <__swrite+0x34>)
 8000b94:	0028      	movs	r0, r5
 8000b96:	4013      	ands	r3, r2
 8000b98:	81a3      	strh	r3, [r4, #12]
 8000b9a:	0032      	movs	r2, r6
 8000b9c:	230e      	movs	r3, #14
 8000b9e:	5ee1      	ldrsh	r1, [r4, r3]
 8000ba0:	003b      	movs	r3, r7
 8000ba2:	f000 f861 	bl	8000c68 <_write_r>
 8000ba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ba8:	ffffefff 	.word	0xffffefff

08000bac <__sseek>:
 8000bac:	b570      	push	{r4, r5, r6, lr}
 8000bae:	000c      	movs	r4, r1
 8000bb0:	250e      	movs	r5, #14
 8000bb2:	5f49      	ldrsh	r1, [r1, r5]
 8000bb4:	f000 f830 	bl	8000c18 <_lseek_r>
 8000bb8:	89a3      	ldrh	r3, [r4, #12]
 8000bba:	1c42      	adds	r2, r0, #1
 8000bbc:	d103      	bne.n	8000bc6 <__sseek+0x1a>
 8000bbe:	4a05      	ldr	r2, [pc, #20]	@ (8000bd4 <__sseek+0x28>)
 8000bc0:	4013      	ands	r3, r2
 8000bc2:	81a3      	strh	r3, [r4, #12]
 8000bc4:	bd70      	pop	{r4, r5, r6, pc}
 8000bc6:	2280      	movs	r2, #128	@ 0x80
 8000bc8:	0152      	lsls	r2, r2, #5
 8000bca:	4313      	orrs	r3, r2
 8000bcc:	81a3      	strh	r3, [r4, #12]
 8000bce:	6560      	str	r0, [r4, #84]	@ 0x54
 8000bd0:	e7f8      	b.n	8000bc4 <__sseek+0x18>
 8000bd2:	46c0      	nop			@ (mov r8, r8)
 8000bd4:	ffffefff 	.word	0xffffefff

08000bd8 <__sclose>:
 8000bd8:	b510      	push	{r4, lr}
 8000bda:	230e      	movs	r3, #14
 8000bdc:	5ec9      	ldrsh	r1, [r1, r3]
 8000bde:	f000 f809 	bl	8000bf4 <_close_r>
 8000be2:	bd10      	pop	{r4, pc}

08000be4 <memset>:
 8000be4:	0003      	movs	r3, r0
 8000be6:	1882      	adds	r2, r0, r2
 8000be8:	4293      	cmp	r3, r2
 8000bea:	d100      	bne.n	8000bee <memset+0xa>
 8000bec:	4770      	bx	lr
 8000bee:	7019      	strb	r1, [r3, #0]
 8000bf0:	3301      	adds	r3, #1
 8000bf2:	e7f9      	b.n	8000be8 <memset+0x4>

08000bf4 <_close_r>:
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	b570      	push	{r4, r5, r6, lr}
 8000bf8:	4d06      	ldr	r5, [pc, #24]	@ (8000c14 <_close_r+0x20>)
 8000bfa:	0004      	movs	r4, r0
 8000bfc:	0008      	movs	r0, r1
 8000bfe:	602b      	str	r3, [r5, #0]
 8000c00:	f7ff fe2b 	bl	800085a <_close>
 8000c04:	1c43      	adds	r3, r0, #1
 8000c06:	d103      	bne.n	8000c10 <_close_r+0x1c>
 8000c08:	682b      	ldr	r3, [r5, #0]
 8000c0a:	2b00      	cmp	r3, #0
 8000c0c:	d000      	beq.n	8000c10 <_close_r+0x1c>
 8000c0e:	6023      	str	r3, [r4, #0]
 8000c10:	bd70      	pop	{r4, r5, r6, pc}
 8000c12:	46c0      	nop			@ (mov r8, r8)
 8000c14:	200001c0 	.word	0x200001c0

08000c18 <_lseek_r>:
 8000c18:	b570      	push	{r4, r5, r6, lr}
 8000c1a:	0004      	movs	r4, r0
 8000c1c:	0008      	movs	r0, r1
 8000c1e:	0011      	movs	r1, r2
 8000c20:	001a      	movs	r2, r3
 8000c22:	2300      	movs	r3, #0
 8000c24:	4d05      	ldr	r5, [pc, #20]	@ (8000c3c <_lseek_r+0x24>)
 8000c26:	602b      	str	r3, [r5, #0]
 8000c28:	f7ff fe38 	bl	800089c <_lseek>
 8000c2c:	1c43      	adds	r3, r0, #1
 8000c2e:	d103      	bne.n	8000c38 <_lseek_r+0x20>
 8000c30:	682b      	ldr	r3, [r5, #0]
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	d000      	beq.n	8000c38 <_lseek_r+0x20>
 8000c36:	6023      	str	r3, [r4, #0]
 8000c38:	bd70      	pop	{r4, r5, r6, pc}
 8000c3a:	46c0      	nop			@ (mov r8, r8)
 8000c3c:	200001c0 	.word	0x200001c0

08000c40 <_read_r>:
 8000c40:	b570      	push	{r4, r5, r6, lr}
 8000c42:	0004      	movs	r4, r0
 8000c44:	0008      	movs	r0, r1
 8000c46:	0011      	movs	r1, r2
 8000c48:	001a      	movs	r2, r3
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	4d05      	ldr	r5, [pc, #20]	@ (8000c64 <_read_r+0x24>)
 8000c4e:	602b      	str	r3, [r5, #0]
 8000c50:	f7ff fdca 	bl	80007e8 <_read>
 8000c54:	1c43      	adds	r3, r0, #1
 8000c56:	d103      	bne.n	8000c60 <_read_r+0x20>
 8000c58:	682b      	ldr	r3, [r5, #0]
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d000      	beq.n	8000c60 <_read_r+0x20>
 8000c5e:	6023      	str	r3, [r4, #0]
 8000c60:	bd70      	pop	{r4, r5, r6, pc}
 8000c62:	46c0      	nop			@ (mov r8, r8)
 8000c64:	200001c0 	.word	0x200001c0

08000c68 <_write_r>:
 8000c68:	b570      	push	{r4, r5, r6, lr}
 8000c6a:	0004      	movs	r4, r0
 8000c6c:	0008      	movs	r0, r1
 8000c6e:	0011      	movs	r1, r2
 8000c70:	001a      	movs	r2, r3
 8000c72:	2300      	movs	r3, #0
 8000c74:	4d05      	ldr	r5, [pc, #20]	@ (8000c8c <_write_r+0x24>)
 8000c76:	602b      	str	r3, [r5, #0]
 8000c78:	f7ff fdd3 	bl	8000822 <_write>
 8000c7c:	1c43      	adds	r3, r0, #1
 8000c7e:	d103      	bne.n	8000c88 <_write_r+0x20>
 8000c80:	682b      	ldr	r3, [r5, #0]
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	d000      	beq.n	8000c88 <_write_r+0x20>
 8000c86:	6023      	str	r3, [r4, #0]
 8000c88:	bd70      	pop	{r4, r5, r6, pc}
 8000c8a:	46c0      	nop			@ (mov r8, r8)
 8000c8c:	200001c0 	.word	0x200001c0

08000c90 <__errno>:
 8000c90:	4b01      	ldr	r3, [pc, #4]	@ (8000c98 <__errno+0x8>)
 8000c92:	6818      	ldr	r0, [r3, #0]
 8000c94:	4770      	bx	lr
 8000c96:	46c0      	nop			@ (mov r8, r8)
 8000c98:	20000010 	.word	0x20000010

08000c9c <__libc_init_array>:
 8000c9c:	b570      	push	{r4, r5, r6, lr}
 8000c9e:	2600      	movs	r6, #0
 8000ca0:	4c0c      	ldr	r4, [pc, #48]	@ (8000cd4 <__libc_init_array+0x38>)
 8000ca2:	4d0d      	ldr	r5, [pc, #52]	@ (8000cd8 <__libc_init_array+0x3c>)
 8000ca4:	1b64      	subs	r4, r4, r5
 8000ca6:	10a4      	asrs	r4, r4, #2
 8000ca8:	42a6      	cmp	r6, r4
 8000caa:	d109      	bne.n	8000cc0 <__libc_init_array+0x24>
 8000cac:	2600      	movs	r6, #0
 8000cae:	f000 fddb 	bl	8001868 <_init>
 8000cb2:	4c0a      	ldr	r4, [pc, #40]	@ (8000cdc <__libc_init_array+0x40>)
 8000cb4:	4d0a      	ldr	r5, [pc, #40]	@ (8000ce0 <__libc_init_array+0x44>)
 8000cb6:	1b64      	subs	r4, r4, r5
 8000cb8:	10a4      	asrs	r4, r4, #2
 8000cba:	42a6      	cmp	r6, r4
 8000cbc:	d105      	bne.n	8000cca <__libc_init_array+0x2e>
 8000cbe:	bd70      	pop	{r4, r5, r6, pc}
 8000cc0:	00b3      	lsls	r3, r6, #2
 8000cc2:	58eb      	ldr	r3, [r5, r3]
 8000cc4:	4798      	blx	r3
 8000cc6:	3601      	adds	r6, #1
 8000cc8:	e7ee      	b.n	8000ca8 <__libc_init_array+0xc>
 8000cca:	00b3      	lsls	r3, r6, #2
 8000ccc:	58eb      	ldr	r3, [r5, r3]
 8000cce:	4798      	blx	r3
 8000cd0:	3601      	adds	r6, #1
 8000cd2:	e7f2      	b.n	8000cba <__libc_init_array+0x1e>
 8000cd4:	0800194c 	.word	0x0800194c
 8000cd8:	0800194c 	.word	0x0800194c
 8000cdc:	08001950 	.word	0x08001950
 8000ce0:	0800194c 	.word	0x0800194c

08000ce4 <__retarget_lock_init_recursive>:
 8000ce4:	4770      	bx	lr

08000ce6 <__retarget_lock_acquire_recursive>:
 8000ce6:	4770      	bx	lr

08000ce8 <__retarget_lock_release_recursive>:
 8000ce8:	4770      	bx	lr
	...

08000cec <_free_r>:
 8000cec:	b570      	push	{r4, r5, r6, lr}
 8000cee:	0005      	movs	r5, r0
 8000cf0:	1e0c      	subs	r4, r1, #0
 8000cf2:	d010      	beq.n	8000d16 <_free_r+0x2a>
 8000cf4:	3c04      	subs	r4, #4
 8000cf6:	6823      	ldr	r3, [r4, #0]
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	da00      	bge.n	8000cfe <_free_r+0x12>
 8000cfc:	18e4      	adds	r4, r4, r3
 8000cfe:	0028      	movs	r0, r5
 8000d00:	f000 f8e0 	bl	8000ec4 <__malloc_lock>
 8000d04:	4a1d      	ldr	r2, [pc, #116]	@ (8000d7c <_free_r+0x90>)
 8000d06:	6813      	ldr	r3, [r2, #0]
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d105      	bne.n	8000d18 <_free_r+0x2c>
 8000d0c:	6063      	str	r3, [r4, #4]
 8000d0e:	6014      	str	r4, [r2, #0]
 8000d10:	0028      	movs	r0, r5
 8000d12:	f000 f8df 	bl	8000ed4 <__malloc_unlock>
 8000d16:	bd70      	pop	{r4, r5, r6, pc}
 8000d18:	42a3      	cmp	r3, r4
 8000d1a:	d908      	bls.n	8000d2e <_free_r+0x42>
 8000d1c:	6820      	ldr	r0, [r4, #0]
 8000d1e:	1821      	adds	r1, r4, r0
 8000d20:	428b      	cmp	r3, r1
 8000d22:	d1f3      	bne.n	8000d0c <_free_r+0x20>
 8000d24:	6819      	ldr	r1, [r3, #0]
 8000d26:	685b      	ldr	r3, [r3, #4]
 8000d28:	1809      	adds	r1, r1, r0
 8000d2a:	6021      	str	r1, [r4, #0]
 8000d2c:	e7ee      	b.n	8000d0c <_free_r+0x20>
 8000d2e:	001a      	movs	r2, r3
 8000d30:	685b      	ldr	r3, [r3, #4]
 8000d32:	2b00      	cmp	r3, #0
 8000d34:	d001      	beq.n	8000d3a <_free_r+0x4e>
 8000d36:	42a3      	cmp	r3, r4
 8000d38:	d9f9      	bls.n	8000d2e <_free_r+0x42>
 8000d3a:	6811      	ldr	r1, [r2, #0]
 8000d3c:	1850      	adds	r0, r2, r1
 8000d3e:	42a0      	cmp	r0, r4
 8000d40:	d10b      	bne.n	8000d5a <_free_r+0x6e>
 8000d42:	6820      	ldr	r0, [r4, #0]
 8000d44:	1809      	adds	r1, r1, r0
 8000d46:	1850      	adds	r0, r2, r1
 8000d48:	6011      	str	r1, [r2, #0]
 8000d4a:	4283      	cmp	r3, r0
 8000d4c:	d1e0      	bne.n	8000d10 <_free_r+0x24>
 8000d4e:	6818      	ldr	r0, [r3, #0]
 8000d50:	685b      	ldr	r3, [r3, #4]
 8000d52:	1841      	adds	r1, r0, r1
 8000d54:	6011      	str	r1, [r2, #0]
 8000d56:	6053      	str	r3, [r2, #4]
 8000d58:	e7da      	b.n	8000d10 <_free_r+0x24>
 8000d5a:	42a0      	cmp	r0, r4
 8000d5c:	d902      	bls.n	8000d64 <_free_r+0x78>
 8000d5e:	230c      	movs	r3, #12
 8000d60:	602b      	str	r3, [r5, #0]
 8000d62:	e7d5      	b.n	8000d10 <_free_r+0x24>
 8000d64:	6820      	ldr	r0, [r4, #0]
 8000d66:	1821      	adds	r1, r4, r0
 8000d68:	428b      	cmp	r3, r1
 8000d6a:	d103      	bne.n	8000d74 <_free_r+0x88>
 8000d6c:	6819      	ldr	r1, [r3, #0]
 8000d6e:	685b      	ldr	r3, [r3, #4]
 8000d70:	1809      	adds	r1, r1, r0
 8000d72:	6021      	str	r1, [r4, #0]
 8000d74:	6063      	str	r3, [r4, #4]
 8000d76:	6054      	str	r4, [r2, #4]
 8000d78:	e7ca      	b.n	8000d10 <_free_r+0x24>
 8000d7a:	46c0      	nop			@ (mov r8, r8)
 8000d7c:	200001cc 	.word	0x200001cc

08000d80 <sbrk_aligned>:
 8000d80:	b570      	push	{r4, r5, r6, lr}
 8000d82:	4e0f      	ldr	r6, [pc, #60]	@ (8000dc0 <sbrk_aligned+0x40>)
 8000d84:	000d      	movs	r5, r1
 8000d86:	6831      	ldr	r1, [r6, #0]
 8000d88:	0004      	movs	r4, r0
 8000d8a:	2900      	cmp	r1, #0
 8000d8c:	d102      	bne.n	8000d94 <sbrk_aligned+0x14>
 8000d8e:	f000 fcbd 	bl	800170c <_sbrk_r>
 8000d92:	6030      	str	r0, [r6, #0]
 8000d94:	0029      	movs	r1, r5
 8000d96:	0020      	movs	r0, r4
 8000d98:	f000 fcb8 	bl	800170c <_sbrk_r>
 8000d9c:	1c43      	adds	r3, r0, #1
 8000d9e:	d103      	bne.n	8000da8 <sbrk_aligned+0x28>
 8000da0:	2501      	movs	r5, #1
 8000da2:	426d      	negs	r5, r5
 8000da4:	0028      	movs	r0, r5
 8000da6:	bd70      	pop	{r4, r5, r6, pc}
 8000da8:	2303      	movs	r3, #3
 8000daa:	1cc5      	adds	r5, r0, #3
 8000dac:	439d      	bics	r5, r3
 8000dae:	42a8      	cmp	r0, r5
 8000db0:	d0f8      	beq.n	8000da4 <sbrk_aligned+0x24>
 8000db2:	1a29      	subs	r1, r5, r0
 8000db4:	0020      	movs	r0, r4
 8000db6:	f000 fca9 	bl	800170c <_sbrk_r>
 8000dba:	3001      	adds	r0, #1
 8000dbc:	d1f2      	bne.n	8000da4 <sbrk_aligned+0x24>
 8000dbe:	e7ef      	b.n	8000da0 <sbrk_aligned+0x20>
 8000dc0:	200001c8 	.word	0x200001c8

08000dc4 <_malloc_r>:
 8000dc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000dc6:	2203      	movs	r2, #3
 8000dc8:	1ccb      	adds	r3, r1, #3
 8000dca:	4393      	bics	r3, r2
 8000dcc:	3308      	adds	r3, #8
 8000dce:	0005      	movs	r5, r0
 8000dd0:	001f      	movs	r7, r3
 8000dd2:	2b0c      	cmp	r3, #12
 8000dd4:	d234      	bcs.n	8000e40 <_malloc_r+0x7c>
 8000dd6:	270c      	movs	r7, #12
 8000dd8:	42b9      	cmp	r1, r7
 8000dda:	d833      	bhi.n	8000e44 <_malloc_r+0x80>
 8000ddc:	0028      	movs	r0, r5
 8000dde:	f000 f871 	bl	8000ec4 <__malloc_lock>
 8000de2:	4e37      	ldr	r6, [pc, #220]	@ (8000ec0 <_malloc_r+0xfc>)
 8000de4:	6833      	ldr	r3, [r6, #0]
 8000de6:	001c      	movs	r4, r3
 8000de8:	2c00      	cmp	r4, #0
 8000dea:	d12f      	bne.n	8000e4c <_malloc_r+0x88>
 8000dec:	0039      	movs	r1, r7
 8000dee:	0028      	movs	r0, r5
 8000df0:	f7ff ffc6 	bl	8000d80 <sbrk_aligned>
 8000df4:	0004      	movs	r4, r0
 8000df6:	1c43      	adds	r3, r0, #1
 8000df8:	d15f      	bne.n	8000eba <_malloc_r+0xf6>
 8000dfa:	6834      	ldr	r4, [r6, #0]
 8000dfc:	9400      	str	r4, [sp, #0]
 8000dfe:	9b00      	ldr	r3, [sp, #0]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d14a      	bne.n	8000e9a <_malloc_r+0xd6>
 8000e04:	2c00      	cmp	r4, #0
 8000e06:	d052      	beq.n	8000eae <_malloc_r+0xea>
 8000e08:	6823      	ldr	r3, [r4, #0]
 8000e0a:	0028      	movs	r0, r5
 8000e0c:	18e3      	adds	r3, r4, r3
 8000e0e:	9900      	ldr	r1, [sp, #0]
 8000e10:	9301      	str	r3, [sp, #4]
 8000e12:	f000 fc7b 	bl	800170c <_sbrk_r>
 8000e16:	9b01      	ldr	r3, [sp, #4]
 8000e18:	4283      	cmp	r3, r0
 8000e1a:	d148      	bne.n	8000eae <_malloc_r+0xea>
 8000e1c:	6823      	ldr	r3, [r4, #0]
 8000e1e:	0028      	movs	r0, r5
 8000e20:	1aff      	subs	r7, r7, r3
 8000e22:	0039      	movs	r1, r7
 8000e24:	f7ff ffac 	bl	8000d80 <sbrk_aligned>
 8000e28:	3001      	adds	r0, #1
 8000e2a:	d040      	beq.n	8000eae <_malloc_r+0xea>
 8000e2c:	6823      	ldr	r3, [r4, #0]
 8000e2e:	19db      	adds	r3, r3, r7
 8000e30:	6023      	str	r3, [r4, #0]
 8000e32:	6833      	ldr	r3, [r6, #0]
 8000e34:	685a      	ldr	r2, [r3, #4]
 8000e36:	2a00      	cmp	r2, #0
 8000e38:	d133      	bne.n	8000ea2 <_malloc_r+0xde>
 8000e3a:	9b00      	ldr	r3, [sp, #0]
 8000e3c:	6033      	str	r3, [r6, #0]
 8000e3e:	e019      	b.n	8000e74 <_malloc_r+0xb0>
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	dac9      	bge.n	8000dd8 <_malloc_r+0x14>
 8000e44:	230c      	movs	r3, #12
 8000e46:	602b      	str	r3, [r5, #0]
 8000e48:	2000      	movs	r0, #0
 8000e4a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e4c:	6821      	ldr	r1, [r4, #0]
 8000e4e:	1bc9      	subs	r1, r1, r7
 8000e50:	d420      	bmi.n	8000e94 <_malloc_r+0xd0>
 8000e52:	290b      	cmp	r1, #11
 8000e54:	d90a      	bls.n	8000e6c <_malloc_r+0xa8>
 8000e56:	19e2      	adds	r2, r4, r7
 8000e58:	6027      	str	r7, [r4, #0]
 8000e5a:	42a3      	cmp	r3, r4
 8000e5c:	d104      	bne.n	8000e68 <_malloc_r+0xa4>
 8000e5e:	6032      	str	r2, [r6, #0]
 8000e60:	6863      	ldr	r3, [r4, #4]
 8000e62:	6011      	str	r1, [r2, #0]
 8000e64:	6053      	str	r3, [r2, #4]
 8000e66:	e005      	b.n	8000e74 <_malloc_r+0xb0>
 8000e68:	605a      	str	r2, [r3, #4]
 8000e6a:	e7f9      	b.n	8000e60 <_malloc_r+0x9c>
 8000e6c:	6862      	ldr	r2, [r4, #4]
 8000e6e:	42a3      	cmp	r3, r4
 8000e70:	d10e      	bne.n	8000e90 <_malloc_r+0xcc>
 8000e72:	6032      	str	r2, [r6, #0]
 8000e74:	0028      	movs	r0, r5
 8000e76:	f000 f82d 	bl	8000ed4 <__malloc_unlock>
 8000e7a:	0020      	movs	r0, r4
 8000e7c:	2207      	movs	r2, #7
 8000e7e:	300b      	adds	r0, #11
 8000e80:	1d23      	adds	r3, r4, #4
 8000e82:	4390      	bics	r0, r2
 8000e84:	1ac2      	subs	r2, r0, r3
 8000e86:	4298      	cmp	r0, r3
 8000e88:	d0df      	beq.n	8000e4a <_malloc_r+0x86>
 8000e8a:	1a1b      	subs	r3, r3, r0
 8000e8c:	50a3      	str	r3, [r4, r2]
 8000e8e:	e7dc      	b.n	8000e4a <_malloc_r+0x86>
 8000e90:	605a      	str	r2, [r3, #4]
 8000e92:	e7ef      	b.n	8000e74 <_malloc_r+0xb0>
 8000e94:	0023      	movs	r3, r4
 8000e96:	6864      	ldr	r4, [r4, #4]
 8000e98:	e7a6      	b.n	8000de8 <_malloc_r+0x24>
 8000e9a:	9c00      	ldr	r4, [sp, #0]
 8000e9c:	6863      	ldr	r3, [r4, #4]
 8000e9e:	9300      	str	r3, [sp, #0]
 8000ea0:	e7ad      	b.n	8000dfe <_malloc_r+0x3a>
 8000ea2:	001a      	movs	r2, r3
 8000ea4:	685b      	ldr	r3, [r3, #4]
 8000ea6:	42a3      	cmp	r3, r4
 8000ea8:	d1fb      	bne.n	8000ea2 <_malloc_r+0xde>
 8000eaa:	2300      	movs	r3, #0
 8000eac:	e7da      	b.n	8000e64 <_malloc_r+0xa0>
 8000eae:	230c      	movs	r3, #12
 8000eb0:	0028      	movs	r0, r5
 8000eb2:	602b      	str	r3, [r5, #0]
 8000eb4:	f000 f80e 	bl	8000ed4 <__malloc_unlock>
 8000eb8:	e7c6      	b.n	8000e48 <_malloc_r+0x84>
 8000eba:	6007      	str	r7, [r0, #0]
 8000ebc:	e7da      	b.n	8000e74 <_malloc_r+0xb0>
 8000ebe:	46c0      	nop			@ (mov r8, r8)
 8000ec0:	200001cc 	.word	0x200001cc

08000ec4 <__malloc_lock>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4802      	ldr	r0, [pc, #8]	@ (8000ed0 <__malloc_lock+0xc>)
 8000ec8:	f7ff ff0d 	bl	8000ce6 <__retarget_lock_acquire_recursive>
 8000ecc:	bd10      	pop	{r4, pc}
 8000ece:	46c0      	nop			@ (mov r8, r8)
 8000ed0:	200001c4 	.word	0x200001c4

08000ed4 <__malloc_unlock>:
 8000ed4:	b510      	push	{r4, lr}
 8000ed6:	4802      	ldr	r0, [pc, #8]	@ (8000ee0 <__malloc_unlock+0xc>)
 8000ed8:	f7ff ff06 	bl	8000ce8 <__retarget_lock_release_recursive>
 8000edc:	bd10      	pop	{r4, pc}
 8000ede:	46c0      	nop			@ (mov r8, r8)
 8000ee0:	200001c4 	.word	0x200001c4

08000ee4 <__sfputc_r>:
 8000ee4:	6893      	ldr	r3, [r2, #8]
 8000ee6:	b510      	push	{r4, lr}
 8000ee8:	3b01      	subs	r3, #1
 8000eea:	6093      	str	r3, [r2, #8]
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	da04      	bge.n	8000efa <__sfputc_r+0x16>
 8000ef0:	6994      	ldr	r4, [r2, #24]
 8000ef2:	42a3      	cmp	r3, r4
 8000ef4:	db07      	blt.n	8000f06 <__sfputc_r+0x22>
 8000ef6:	290a      	cmp	r1, #10
 8000ef8:	d005      	beq.n	8000f06 <__sfputc_r+0x22>
 8000efa:	6813      	ldr	r3, [r2, #0]
 8000efc:	1c58      	adds	r0, r3, #1
 8000efe:	6010      	str	r0, [r2, #0]
 8000f00:	7019      	strb	r1, [r3, #0]
 8000f02:	0008      	movs	r0, r1
 8000f04:	bd10      	pop	{r4, pc}
 8000f06:	f000 fb60 	bl	80015ca <__swbuf_r>
 8000f0a:	0001      	movs	r1, r0
 8000f0c:	e7f9      	b.n	8000f02 <__sfputc_r+0x1e>

08000f0e <__sfputs_r>:
 8000f0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f10:	0006      	movs	r6, r0
 8000f12:	000f      	movs	r7, r1
 8000f14:	0014      	movs	r4, r2
 8000f16:	18d5      	adds	r5, r2, r3
 8000f18:	42ac      	cmp	r4, r5
 8000f1a:	d101      	bne.n	8000f20 <__sfputs_r+0x12>
 8000f1c:	2000      	movs	r0, #0
 8000f1e:	e007      	b.n	8000f30 <__sfputs_r+0x22>
 8000f20:	7821      	ldrb	r1, [r4, #0]
 8000f22:	003a      	movs	r2, r7
 8000f24:	0030      	movs	r0, r6
 8000f26:	f7ff ffdd 	bl	8000ee4 <__sfputc_r>
 8000f2a:	3401      	adds	r4, #1
 8000f2c:	1c43      	adds	r3, r0, #1
 8000f2e:	d1f3      	bne.n	8000f18 <__sfputs_r+0xa>
 8000f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f34 <_vfiprintf_r>:
 8000f34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f36:	b0a1      	sub	sp, #132	@ 0x84
 8000f38:	000f      	movs	r7, r1
 8000f3a:	0015      	movs	r5, r2
 8000f3c:	001e      	movs	r6, r3
 8000f3e:	9003      	str	r0, [sp, #12]
 8000f40:	2800      	cmp	r0, #0
 8000f42:	d004      	beq.n	8000f4e <_vfiprintf_r+0x1a>
 8000f44:	6a03      	ldr	r3, [r0, #32]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d101      	bne.n	8000f4e <_vfiprintf_r+0x1a>
 8000f4a:	f7ff fdbb 	bl	8000ac4 <__sinit>
 8000f4e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000f50:	07db      	lsls	r3, r3, #31
 8000f52:	d405      	bmi.n	8000f60 <_vfiprintf_r+0x2c>
 8000f54:	89bb      	ldrh	r3, [r7, #12]
 8000f56:	059b      	lsls	r3, r3, #22
 8000f58:	d402      	bmi.n	8000f60 <_vfiprintf_r+0x2c>
 8000f5a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000f5c:	f7ff fec3 	bl	8000ce6 <__retarget_lock_acquire_recursive>
 8000f60:	89bb      	ldrh	r3, [r7, #12]
 8000f62:	071b      	lsls	r3, r3, #28
 8000f64:	d502      	bpl.n	8000f6c <_vfiprintf_r+0x38>
 8000f66:	693b      	ldr	r3, [r7, #16]
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	d113      	bne.n	8000f94 <_vfiprintf_r+0x60>
 8000f6c:	0039      	movs	r1, r7
 8000f6e:	9803      	ldr	r0, [sp, #12]
 8000f70:	f000 fb6e 	bl	8001650 <__swsetup_r>
 8000f74:	2800      	cmp	r0, #0
 8000f76:	d00d      	beq.n	8000f94 <_vfiprintf_r+0x60>
 8000f78:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8000f7a:	07db      	lsls	r3, r3, #31
 8000f7c:	d503      	bpl.n	8000f86 <_vfiprintf_r+0x52>
 8000f7e:	2001      	movs	r0, #1
 8000f80:	4240      	negs	r0, r0
 8000f82:	b021      	add	sp, #132	@ 0x84
 8000f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f86:	89bb      	ldrh	r3, [r7, #12]
 8000f88:	059b      	lsls	r3, r3, #22
 8000f8a:	d4f8      	bmi.n	8000f7e <_vfiprintf_r+0x4a>
 8000f8c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8000f8e:	f7ff feab 	bl	8000ce8 <__retarget_lock_release_recursive>
 8000f92:	e7f4      	b.n	8000f7e <_vfiprintf_r+0x4a>
 8000f94:	2300      	movs	r3, #0
 8000f96:	ac08      	add	r4, sp, #32
 8000f98:	6163      	str	r3, [r4, #20]
 8000f9a:	3320      	adds	r3, #32
 8000f9c:	7663      	strb	r3, [r4, #25]
 8000f9e:	3310      	adds	r3, #16
 8000fa0:	76a3      	strb	r3, [r4, #26]
 8000fa2:	9607      	str	r6, [sp, #28]
 8000fa4:	002e      	movs	r6, r5
 8000fa6:	7833      	ldrb	r3, [r6, #0]
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	d001      	beq.n	8000fb0 <_vfiprintf_r+0x7c>
 8000fac:	2b25      	cmp	r3, #37	@ 0x25
 8000fae:	d148      	bne.n	8001042 <_vfiprintf_r+0x10e>
 8000fb0:	1b73      	subs	r3, r6, r5
 8000fb2:	9305      	str	r3, [sp, #20]
 8000fb4:	42ae      	cmp	r6, r5
 8000fb6:	d00b      	beq.n	8000fd0 <_vfiprintf_r+0x9c>
 8000fb8:	002a      	movs	r2, r5
 8000fba:	0039      	movs	r1, r7
 8000fbc:	9803      	ldr	r0, [sp, #12]
 8000fbe:	f7ff ffa6 	bl	8000f0e <__sfputs_r>
 8000fc2:	3001      	adds	r0, #1
 8000fc4:	d100      	bne.n	8000fc8 <_vfiprintf_r+0x94>
 8000fc6:	e0ae      	b.n	8001126 <_vfiprintf_r+0x1f2>
 8000fc8:	6963      	ldr	r3, [r4, #20]
 8000fca:	9a05      	ldr	r2, [sp, #20]
 8000fcc:	189b      	adds	r3, r3, r2
 8000fce:	6163      	str	r3, [r4, #20]
 8000fd0:	7833      	ldrb	r3, [r6, #0]
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	d100      	bne.n	8000fd8 <_vfiprintf_r+0xa4>
 8000fd6:	e0a6      	b.n	8001126 <_vfiprintf_r+0x1f2>
 8000fd8:	2201      	movs	r2, #1
 8000fda:	2300      	movs	r3, #0
 8000fdc:	4252      	negs	r2, r2
 8000fde:	6062      	str	r2, [r4, #4]
 8000fe0:	a904      	add	r1, sp, #16
 8000fe2:	3254      	adds	r2, #84	@ 0x54
 8000fe4:	1852      	adds	r2, r2, r1
 8000fe6:	1c75      	adds	r5, r6, #1
 8000fe8:	6023      	str	r3, [r4, #0]
 8000fea:	60e3      	str	r3, [r4, #12]
 8000fec:	60a3      	str	r3, [r4, #8]
 8000fee:	7013      	strb	r3, [r2, #0]
 8000ff0:	65a3      	str	r3, [r4, #88]	@ 0x58
 8000ff2:	4b59      	ldr	r3, [pc, #356]	@ (8001158 <_vfiprintf_r+0x224>)
 8000ff4:	2205      	movs	r2, #5
 8000ff6:	0018      	movs	r0, r3
 8000ff8:	7829      	ldrb	r1, [r5, #0]
 8000ffa:	9305      	str	r3, [sp, #20]
 8000ffc:	f000 fb98 	bl	8001730 <memchr>
 8001000:	1c6e      	adds	r6, r5, #1
 8001002:	2800      	cmp	r0, #0
 8001004:	d11f      	bne.n	8001046 <_vfiprintf_r+0x112>
 8001006:	6822      	ldr	r2, [r4, #0]
 8001008:	06d3      	lsls	r3, r2, #27
 800100a:	d504      	bpl.n	8001016 <_vfiprintf_r+0xe2>
 800100c:	2353      	movs	r3, #83	@ 0x53
 800100e:	a904      	add	r1, sp, #16
 8001010:	185b      	adds	r3, r3, r1
 8001012:	2120      	movs	r1, #32
 8001014:	7019      	strb	r1, [r3, #0]
 8001016:	0713      	lsls	r3, r2, #28
 8001018:	d504      	bpl.n	8001024 <_vfiprintf_r+0xf0>
 800101a:	2353      	movs	r3, #83	@ 0x53
 800101c:	a904      	add	r1, sp, #16
 800101e:	185b      	adds	r3, r3, r1
 8001020:	212b      	movs	r1, #43	@ 0x2b
 8001022:	7019      	strb	r1, [r3, #0]
 8001024:	782b      	ldrb	r3, [r5, #0]
 8001026:	2b2a      	cmp	r3, #42	@ 0x2a
 8001028:	d016      	beq.n	8001058 <_vfiprintf_r+0x124>
 800102a:	002e      	movs	r6, r5
 800102c:	2100      	movs	r1, #0
 800102e:	200a      	movs	r0, #10
 8001030:	68e3      	ldr	r3, [r4, #12]
 8001032:	7832      	ldrb	r2, [r6, #0]
 8001034:	1c75      	adds	r5, r6, #1
 8001036:	3a30      	subs	r2, #48	@ 0x30
 8001038:	2a09      	cmp	r2, #9
 800103a:	d950      	bls.n	80010de <_vfiprintf_r+0x1aa>
 800103c:	2900      	cmp	r1, #0
 800103e:	d111      	bne.n	8001064 <_vfiprintf_r+0x130>
 8001040:	e017      	b.n	8001072 <_vfiprintf_r+0x13e>
 8001042:	3601      	adds	r6, #1
 8001044:	e7af      	b.n	8000fa6 <_vfiprintf_r+0x72>
 8001046:	9b05      	ldr	r3, [sp, #20]
 8001048:	6822      	ldr	r2, [r4, #0]
 800104a:	1ac0      	subs	r0, r0, r3
 800104c:	2301      	movs	r3, #1
 800104e:	4083      	lsls	r3, r0
 8001050:	4313      	orrs	r3, r2
 8001052:	0035      	movs	r5, r6
 8001054:	6023      	str	r3, [r4, #0]
 8001056:	e7cc      	b.n	8000ff2 <_vfiprintf_r+0xbe>
 8001058:	9b07      	ldr	r3, [sp, #28]
 800105a:	1d19      	adds	r1, r3, #4
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	9107      	str	r1, [sp, #28]
 8001060:	2b00      	cmp	r3, #0
 8001062:	db01      	blt.n	8001068 <_vfiprintf_r+0x134>
 8001064:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001066:	e004      	b.n	8001072 <_vfiprintf_r+0x13e>
 8001068:	425b      	negs	r3, r3
 800106a:	60e3      	str	r3, [r4, #12]
 800106c:	2302      	movs	r3, #2
 800106e:	4313      	orrs	r3, r2
 8001070:	6023      	str	r3, [r4, #0]
 8001072:	7833      	ldrb	r3, [r6, #0]
 8001074:	2b2e      	cmp	r3, #46	@ 0x2e
 8001076:	d10c      	bne.n	8001092 <_vfiprintf_r+0x15e>
 8001078:	7873      	ldrb	r3, [r6, #1]
 800107a:	2b2a      	cmp	r3, #42	@ 0x2a
 800107c:	d134      	bne.n	80010e8 <_vfiprintf_r+0x1b4>
 800107e:	9b07      	ldr	r3, [sp, #28]
 8001080:	3602      	adds	r6, #2
 8001082:	1d1a      	adds	r2, r3, #4
 8001084:	681b      	ldr	r3, [r3, #0]
 8001086:	9207      	str	r2, [sp, #28]
 8001088:	2b00      	cmp	r3, #0
 800108a:	da01      	bge.n	8001090 <_vfiprintf_r+0x15c>
 800108c:	2301      	movs	r3, #1
 800108e:	425b      	negs	r3, r3
 8001090:	9309      	str	r3, [sp, #36]	@ 0x24
 8001092:	4d32      	ldr	r5, [pc, #200]	@ (800115c <_vfiprintf_r+0x228>)
 8001094:	2203      	movs	r2, #3
 8001096:	0028      	movs	r0, r5
 8001098:	7831      	ldrb	r1, [r6, #0]
 800109a:	f000 fb49 	bl	8001730 <memchr>
 800109e:	2800      	cmp	r0, #0
 80010a0:	d006      	beq.n	80010b0 <_vfiprintf_r+0x17c>
 80010a2:	2340      	movs	r3, #64	@ 0x40
 80010a4:	1b40      	subs	r0, r0, r5
 80010a6:	4083      	lsls	r3, r0
 80010a8:	6822      	ldr	r2, [r4, #0]
 80010aa:	3601      	adds	r6, #1
 80010ac:	4313      	orrs	r3, r2
 80010ae:	6023      	str	r3, [r4, #0]
 80010b0:	7831      	ldrb	r1, [r6, #0]
 80010b2:	2206      	movs	r2, #6
 80010b4:	482a      	ldr	r0, [pc, #168]	@ (8001160 <_vfiprintf_r+0x22c>)
 80010b6:	1c75      	adds	r5, r6, #1
 80010b8:	7621      	strb	r1, [r4, #24]
 80010ba:	f000 fb39 	bl	8001730 <memchr>
 80010be:	2800      	cmp	r0, #0
 80010c0:	d040      	beq.n	8001144 <_vfiprintf_r+0x210>
 80010c2:	4b28      	ldr	r3, [pc, #160]	@ (8001164 <_vfiprintf_r+0x230>)
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d122      	bne.n	800110e <_vfiprintf_r+0x1da>
 80010c8:	2207      	movs	r2, #7
 80010ca:	9b07      	ldr	r3, [sp, #28]
 80010cc:	3307      	adds	r3, #7
 80010ce:	4393      	bics	r3, r2
 80010d0:	3308      	adds	r3, #8
 80010d2:	9307      	str	r3, [sp, #28]
 80010d4:	6963      	ldr	r3, [r4, #20]
 80010d6:	9a04      	ldr	r2, [sp, #16]
 80010d8:	189b      	adds	r3, r3, r2
 80010da:	6163      	str	r3, [r4, #20]
 80010dc:	e762      	b.n	8000fa4 <_vfiprintf_r+0x70>
 80010de:	4343      	muls	r3, r0
 80010e0:	002e      	movs	r6, r5
 80010e2:	2101      	movs	r1, #1
 80010e4:	189b      	adds	r3, r3, r2
 80010e6:	e7a4      	b.n	8001032 <_vfiprintf_r+0xfe>
 80010e8:	2300      	movs	r3, #0
 80010ea:	200a      	movs	r0, #10
 80010ec:	0019      	movs	r1, r3
 80010ee:	3601      	adds	r6, #1
 80010f0:	6063      	str	r3, [r4, #4]
 80010f2:	7832      	ldrb	r2, [r6, #0]
 80010f4:	1c75      	adds	r5, r6, #1
 80010f6:	3a30      	subs	r2, #48	@ 0x30
 80010f8:	2a09      	cmp	r2, #9
 80010fa:	d903      	bls.n	8001104 <_vfiprintf_r+0x1d0>
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d0c8      	beq.n	8001092 <_vfiprintf_r+0x15e>
 8001100:	9109      	str	r1, [sp, #36]	@ 0x24
 8001102:	e7c6      	b.n	8001092 <_vfiprintf_r+0x15e>
 8001104:	4341      	muls	r1, r0
 8001106:	002e      	movs	r6, r5
 8001108:	2301      	movs	r3, #1
 800110a:	1889      	adds	r1, r1, r2
 800110c:	e7f1      	b.n	80010f2 <_vfiprintf_r+0x1be>
 800110e:	aa07      	add	r2, sp, #28
 8001110:	9200      	str	r2, [sp, #0]
 8001112:	0021      	movs	r1, r4
 8001114:	003a      	movs	r2, r7
 8001116:	4b14      	ldr	r3, [pc, #80]	@ (8001168 <_vfiprintf_r+0x234>)
 8001118:	9803      	ldr	r0, [sp, #12]
 800111a:	e000      	b.n	800111e <_vfiprintf_r+0x1ea>
 800111c:	bf00      	nop
 800111e:	9004      	str	r0, [sp, #16]
 8001120:	9b04      	ldr	r3, [sp, #16]
 8001122:	3301      	adds	r3, #1
 8001124:	d1d6      	bne.n	80010d4 <_vfiprintf_r+0x1a0>
 8001126:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001128:	07db      	lsls	r3, r3, #31
 800112a:	d405      	bmi.n	8001138 <_vfiprintf_r+0x204>
 800112c:	89bb      	ldrh	r3, [r7, #12]
 800112e:	059b      	lsls	r3, r3, #22
 8001130:	d402      	bmi.n	8001138 <_vfiprintf_r+0x204>
 8001132:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8001134:	f7ff fdd8 	bl	8000ce8 <__retarget_lock_release_recursive>
 8001138:	89bb      	ldrh	r3, [r7, #12]
 800113a:	065b      	lsls	r3, r3, #25
 800113c:	d500      	bpl.n	8001140 <_vfiprintf_r+0x20c>
 800113e:	e71e      	b.n	8000f7e <_vfiprintf_r+0x4a>
 8001140:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8001142:	e71e      	b.n	8000f82 <_vfiprintf_r+0x4e>
 8001144:	aa07      	add	r2, sp, #28
 8001146:	9200      	str	r2, [sp, #0]
 8001148:	0021      	movs	r1, r4
 800114a:	003a      	movs	r2, r7
 800114c:	4b06      	ldr	r3, [pc, #24]	@ (8001168 <_vfiprintf_r+0x234>)
 800114e:	9803      	ldr	r0, [sp, #12]
 8001150:	f000 f87c 	bl	800124c <_printf_i>
 8001154:	e7e3      	b.n	800111e <_vfiprintf_r+0x1ea>
 8001156:	46c0      	nop			@ (mov r8, r8)
 8001158:	08001918 	.word	0x08001918
 800115c:	0800191e 	.word	0x0800191e
 8001160:	08001922 	.word	0x08001922
 8001164:	00000000 	.word	0x00000000
 8001168:	08000f0f 	.word	0x08000f0f

0800116c <_printf_common>:
 800116c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800116e:	0016      	movs	r6, r2
 8001170:	9301      	str	r3, [sp, #4]
 8001172:	688a      	ldr	r2, [r1, #8]
 8001174:	690b      	ldr	r3, [r1, #16]
 8001176:	000c      	movs	r4, r1
 8001178:	9000      	str	r0, [sp, #0]
 800117a:	4293      	cmp	r3, r2
 800117c:	da00      	bge.n	8001180 <_printf_common+0x14>
 800117e:	0013      	movs	r3, r2
 8001180:	0022      	movs	r2, r4
 8001182:	6033      	str	r3, [r6, #0]
 8001184:	3243      	adds	r2, #67	@ 0x43
 8001186:	7812      	ldrb	r2, [r2, #0]
 8001188:	2a00      	cmp	r2, #0
 800118a:	d001      	beq.n	8001190 <_printf_common+0x24>
 800118c:	3301      	adds	r3, #1
 800118e:	6033      	str	r3, [r6, #0]
 8001190:	6823      	ldr	r3, [r4, #0]
 8001192:	069b      	lsls	r3, r3, #26
 8001194:	d502      	bpl.n	800119c <_printf_common+0x30>
 8001196:	6833      	ldr	r3, [r6, #0]
 8001198:	3302      	adds	r3, #2
 800119a:	6033      	str	r3, [r6, #0]
 800119c:	6822      	ldr	r2, [r4, #0]
 800119e:	2306      	movs	r3, #6
 80011a0:	0015      	movs	r5, r2
 80011a2:	401d      	ands	r5, r3
 80011a4:	421a      	tst	r2, r3
 80011a6:	d027      	beq.n	80011f8 <_printf_common+0x8c>
 80011a8:	0023      	movs	r3, r4
 80011aa:	3343      	adds	r3, #67	@ 0x43
 80011ac:	781b      	ldrb	r3, [r3, #0]
 80011ae:	1e5a      	subs	r2, r3, #1
 80011b0:	4193      	sbcs	r3, r2
 80011b2:	6822      	ldr	r2, [r4, #0]
 80011b4:	0692      	lsls	r2, r2, #26
 80011b6:	d430      	bmi.n	800121a <_printf_common+0xae>
 80011b8:	0022      	movs	r2, r4
 80011ba:	9901      	ldr	r1, [sp, #4]
 80011bc:	9800      	ldr	r0, [sp, #0]
 80011be:	9d08      	ldr	r5, [sp, #32]
 80011c0:	3243      	adds	r2, #67	@ 0x43
 80011c2:	47a8      	blx	r5
 80011c4:	3001      	adds	r0, #1
 80011c6:	d025      	beq.n	8001214 <_printf_common+0xa8>
 80011c8:	2206      	movs	r2, #6
 80011ca:	6823      	ldr	r3, [r4, #0]
 80011cc:	2500      	movs	r5, #0
 80011ce:	4013      	ands	r3, r2
 80011d0:	2b04      	cmp	r3, #4
 80011d2:	d105      	bne.n	80011e0 <_printf_common+0x74>
 80011d4:	6833      	ldr	r3, [r6, #0]
 80011d6:	68e5      	ldr	r5, [r4, #12]
 80011d8:	1aed      	subs	r5, r5, r3
 80011da:	43eb      	mvns	r3, r5
 80011dc:	17db      	asrs	r3, r3, #31
 80011de:	401d      	ands	r5, r3
 80011e0:	68a3      	ldr	r3, [r4, #8]
 80011e2:	6922      	ldr	r2, [r4, #16]
 80011e4:	4293      	cmp	r3, r2
 80011e6:	dd01      	ble.n	80011ec <_printf_common+0x80>
 80011e8:	1a9b      	subs	r3, r3, r2
 80011ea:	18ed      	adds	r5, r5, r3
 80011ec:	2600      	movs	r6, #0
 80011ee:	42b5      	cmp	r5, r6
 80011f0:	d120      	bne.n	8001234 <_printf_common+0xc8>
 80011f2:	2000      	movs	r0, #0
 80011f4:	e010      	b.n	8001218 <_printf_common+0xac>
 80011f6:	3501      	adds	r5, #1
 80011f8:	68e3      	ldr	r3, [r4, #12]
 80011fa:	6832      	ldr	r2, [r6, #0]
 80011fc:	1a9b      	subs	r3, r3, r2
 80011fe:	42ab      	cmp	r3, r5
 8001200:	ddd2      	ble.n	80011a8 <_printf_common+0x3c>
 8001202:	0022      	movs	r2, r4
 8001204:	2301      	movs	r3, #1
 8001206:	9901      	ldr	r1, [sp, #4]
 8001208:	9800      	ldr	r0, [sp, #0]
 800120a:	9f08      	ldr	r7, [sp, #32]
 800120c:	3219      	adds	r2, #25
 800120e:	47b8      	blx	r7
 8001210:	3001      	adds	r0, #1
 8001212:	d1f0      	bne.n	80011f6 <_printf_common+0x8a>
 8001214:	2001      	movs	r0, #1
 8001216:	4240      	negs	r0, r0
 8001218:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800121a:	2030      	movs	r0, #48	@ 0x30
 800121c:	18e1      	adds	r1, r4, r3
 800121e:	3143      	adds	r1, #67	@ 0x43
 8001220:	7008      	strb	r0, [r1, #0]
 8001222:	0021      	movs	r1, r4
 8001224:	1c5a      	adds	r2, r3, #1
 8001226:	3145      	adds	r1, #69	@ 0x45
 8001228:	7809      	ldrb	r1, [r1, #0]
 800122a:	18a2      	adds	r2, r4, r2
 800122c:	3243      	adds	r2, #67	@ 0x43
 800122e:	3302      	adds	r3, #2
 8001230:	7011      	strb	r1, [r2, #0]
 8001232:	e7c1      	b.n	80011b8 <_printf_common+0x4c>
 8001234:	0022      	movs	r2, r4
 8001236:	2301      	movs	r3, #1
 8001238:	9901      	ldr	r1, [sp, #4]
 800123a:	9800      	ldr	r0, [sp, #0]
 800123c:	9f08      	ldr	r7, [sp, #32]
 800123e:	321a      	adds	r2, #26
 8001240:	47b8      	blx	r7
 8001242:	3001      	adds	r0, #1
 8001244:	d0e6      	beq.n	8001214 <_printf_common+0xa8>
 8001246:	3601      	adds	r6, #1
 8001248:	e7d1      	b.n	80011ee <_printf_common+0x82>
	...

0800124c <_printf_i>:
 800124c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800124e:	b08b      	sub	sp, #44	@ 0x2c
 8001250:	9206      	str	r2, [sp, #24]
 8001252:	000a      	movs	r2, r1
 8001254:	3243      	adds	r2, #67	@ 0x43
 8001256:	9307      	str	r3, [sp, #28]
 8001258:	9005      	str	r0, [sp, #20]
 800125a:	9203      	str	r2, [sp, #12]
 800125c:	7e0a      	ldrb	r2, [r1, #24]
 800125e:	000c      	movs	r4, r1
 8001260:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8001262:	2a78      	cmp	r2, #120	@ 0x78
 8001264:	d809      	bhi.n	800127a <_printf_i+0x2e>
 8001266:	2a62      	cmp	r2, #98	@ 0x62
 8001268:	d80b      	bhi.n	8001282 <_printf_i+0x36>
 800126a:	2a00      	cmp	r2, #0
 800126c:	d100      	bne.n	8001270 <_printf_i+0x24>
 800126e:	e0bc      	b.n	80013ea <_printf_i+0x19e>
 8001270:	497b      	ldr	r1, [pc, #492]	@ (8001460 <_printf_i+0x214>)
 8001272:	9104      	str	r1, [sp, #16]
 8001274:	2a58      	cmp	r2, #88	@ 0x58
 8001276:	d100      	bne.n	800127a <_printf_i+0x2e>
 8001278:	e090      	b.n	800139c <_printf_i+0x150>
 800127a:	0025      	movs	r5, r4
 800127c:	3542      	adds	r5, #66	@ 0x42
 800127e:	702a      	strb	r2, [r5, #0]
 8001280:	e022      	b.n	80012c8 <_printf_i+0x7c>
 8001282:	0010      	movs	r0, r2
 8001284:	3863      	subs	r0, #99	@ 0x63
 8001286:	2815      	cmp	r0, #21
 8001288:	d8f7      	bhi.n	800127a <_printf_i+0x2e>
 800128a:	f7fe ff3b 	bl	8000104 <__gnu_thumb1_case_shi>
 800128e:	0016      	.short	0x0016
 8001290:	fff6001f 	.word	0xfff6001f
 8001294:	fff6fff6 	.word	0xfff6fff6
 8001298:	001ffff6 	.word	0x001ffff6
 800129c:	fff6fff6 	.word	0xfff6fff6
 80012a0:	fff6fff6 	.word	0xfff6fff6
 80012a4:	003600a1 	.word	0x003600a1
 80012a8:	fff60080 	.word	0xfff60080
 80012ac:	00b2fff6 	.word	0x00b2fff6
 80012b0:	0036fff6 	.word	0x0036fff6
 80012b4:	fff6fff6 	.word	0xfff6fff6
 80012b8:	0084      	.short	0x0084
 80012ba:	0025      	movs	r5, r4
 80012bc:	681a      	ldr	r2, [r3, #0]
 80012be:	3542      	adds	r5, #66	@ 0x42
 80012c0:	1d11      	adds	r1, r2, #4
 80012c2:	6019      	str	r1, [r3, #0]
 80012c4:	6813      	ldr	r3, [r2, #0]
 80012c6:	702b      	strb	r3, [r5, #0]
 80012c8:	2301      	movs	r3, #1
 80012ca:	e0a0      	b.n	800140e <_printf_i+0x1c2>
 80012cc:	6818      	ldr	r0, [r3, #0]
 80012ce:	6809      	ldr	r1, [r1, #0]
 80012d0:	1d02      	adds	r2, r0, #4
 80012d2:	060d      	lsls	r5, r1, #24
 80012d4:	d50b      	bpl.n	80012ee <_printf_i+0xa2>
 80012d6:	6806      	ldr	r6, [r0, #0]
 80012d8:	601a      	str	r2, [r3, #0]
 80012da:	2e00      	cmp	r6, #0
 80012dc:	da03      	bge.n	80012e6 <_printf_i+0x9a>
 80012de:	232d      	movs	r3, #45	@ 0x2d
 80012e0:	9a03      	ldr	r2, [sp, #12]
 80012e2:	4276      	negs	r6, r6
 80012e4:	7013      	strb	r3, [r2, #0]
 80012e6:	4b5e      	ldr	r3, [pc, #376]	@ (8001460 <_printf_i+0x214>)
 80012e8:	270a      	movs	r7, #10
 80012ea:	9304      	str	r3, [sp, #16]
 80012ec:	e018      	b.n	8001320 <_printf_i+0xd4>
 80012ee:	6806      	ldr	r6, [r0, #0]
 80012f0:	601a      	str	r2, [r3, #0]
 80012f2:	0649      	lsls	r1, r1, #25
 80012f4:	d5f1      	bpl.n	80012da <_printf_i+0x8e>
 80012f6:	b236      	sxth	r6, r6
 80012f8:	e7ef      	b.n	80012da <_printf_i+0x8e>
 80012fa:	6808      	ldr	r0, [r1, #0]
 80012fc:	6819      	ldr	r1, [r3, #0]
 80012fe:	c940      	ldmia	r1!, {r6}
 8001300:	0605      	lsls	r5, r0, #24
 8001302:	d402      	bmi.n	800130a <_printf_i+0xbe>
 8001304:	0640      	lsls	r0, r0, #25
 8001306:	d500      	bpl.n	800130a <_printf_i+0xbe>
 8001308:	b2b6      	uxth	r6, r6
 800130a:	6019      	str	r1, [r3, #0]
 800130c:	4b54      	ldr	r3, [pc, #336]	@ (8001460 <_printf_i+0x214>)
 800130e:	270a      	movs	r7, #10
 8001310:	9304      	str	r3, [sp, #16]
 8001312:	2a6f      	cmp	r2, #111	@ 0x6f
 8001314:	d100      	bne.n	8001318 <_printf_i+0xcc>
 8001316:	3f02      	subs	r7, #2
 8001318:	0023      	movs	r3, r4
 800131a:	2200      	movs	r2, #0
 800131c:	3343      	adds	r3, #67	@ 0x43
 800131e:	701a      	strb	r2, [r3, #0]
 8001320:	6863      	ldr	r3, [r4, #4]
 8001322:	60a3      	str	r3, [r4, #8]
 8001324:	2b00      	cmp	r3, #0
 8001326:	db03      	blt.n	8001330 <_printf_i+0xe4>
 8001328:	2104      	movs	r1, #4
 800132a:	6822      	ldr	r2, [r4, #0]
 800132c:	438a      	bics	r2, r1
 800132e:	6022      	str	r2, [r4, #0]
 8001330:	2e00      	cmp	r6, #0
 8001332:	d102      	bne.n	800133a <_printf_i+0xee>
 8001334:	9d03      	ldr	r5, [sp, #12]
 8001336:	2b00      	cmp	r3, #0
 8001338:	d00c      	beq.n	8001354 <_printf_i+0x108>
 800133a:	9d03      	ldr	r5, [sp, #12]
 800133c:	0030      	movs	r0, r6
 800133e:	0039      	movs	r1, r7
 8001340:	f7fe ff70 	bl	8000224 <__aeabi_uidivmod>
 8001344:	9b04      	ldr	r3, [sp, #16]
 8001346:	3d01      	subs	r5, #1
 8001348:	5c5b      	ldrb	r3, [r3, r1]
 800134a:	702b      	strb	r3, [r5, #0]
 800134c:	0033      	movs	r3, r6
 800134e:	0006      	movs	r6, r0
 8001350:	429f      	cmp	r7, r3
 8001352:	d9f3      	bls.n	800133c <_printf_i+0xf0>
 8001354:	2f08      	cmp	r7, #8
 8001356:	d109      	bne.n	800136c <_printf_i+0x120>
 8001358:	6823      	ldr	r3, [r4, #0]
 800135a:	07db      	lsls	r3, r3, #31
 800135c:	d506      	bpl.n	800136c <_printf_i+0x120>
 800135e:	6862      	ldr	r2, [r4, #4]
 8001360:	6923      	ldr	r3, [r4, #16]
 8001362:	429a      	cmp	r2, r3
 8001364:	dc02      	bgt.n	800136c <_printf_i+0x120>
 8001366:	2330      	movs	r3, #48	@ 0x30
 8001368:	3d01      	subs	r5, #1
 800136a:	702b      	strb	r3, [r5, #0]
 800136c:	9b03      	ldr	r3, [sp, #12]
 800136e:	1b5b      	subs	r3, r3, r5
 8001370:	6123      	str	r3, [r4, #16]
 8001372:	9b07      	ldr	r3, [sp, #28]
 8001374:	0021      	movs	r1, r4
 8001376:	9300      	str	r3, [sp, #0]
 8001378:	9805      	ldr	r0, [sp, #20]
 800137a:	9b06      	ldr	r3, [sp, #24]
 800137c:	aa09      	add	r2, sp, #36	@ 0x24
 800137e:	f7ff fef5 	bl	800116c <_printf_common>
 8001382:	3001      	adds	r0, #1
 8001384:	d148      	bne.n	8001418 <_printf_i+0x1cc>
 8001386:	2001      	movs	r0, #1
 8001388:	4240      	negs	r0, r0
 800138a:	b00b      	add	sp, #44	@ 0x2c
 800138c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800138e:	2220      	movs	r2, #32
 8001390:	6809      	ldr	r1, [r1, #0]
 8001392:	430a      	orrs	r2, r1
 8001394:	6022      	str	r2, [r4, #0]
 8001396:	2278      	movs	r2, #120	@ 0x78
 8001398:	4932      	ldr	r1, [pc, #200]	@ (8001464 <_printf_i+0x218>)
 800139a:	9104      	str	r1, [sp, #16]
 800139c:	0021      	movs	r1, r4
 800139e:	3145      	adds	r1, #69	@ 0x45
 80013a0:	700a      	strb	r2, [r1, #0]
 80013a2:	6819      	ldr	r1, [r3, #0]
 80013a4:	6822      	ldr	r2, [r4, #0]
 80013a6:	c940      	ldmia	r1!, {r6}
 80013a8:	0610      	lsls	r0, r2, #24
 80013aa:	d402      	bmi.n	80013b2 <_printf_i+0x166>
 80013ac:	0650      	lsls	r0, r2, #25
 80013ae:	d500      	bpl.n	80013b2 <_printf_i+0x166>
 80013b0:	b2b6      	uxth	r6, r6
 80013b2:	6019      	str	r1, [r3, #0]
 80013b4:	07d3      	lsls	r3, r2, #31
 80013b6:	d502      	bpl.n	80013be <_printf_i+0x172>
 80013b8:	2320      	movs	r3, #32
 80013ba:	4313      	orrs	r3, r2
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	2e00      	cmp	r6, #0
 80013c0:	d001      	beq.n	80013c6 <_printf_i+0x17a>
 80013c2:	2710      	movs	r7, #16
 80013c4:	e7a8      	b.n	8001318 <_printf_i+0xcc>
 80013c6:	2220      	movs	r2, #32
 80013c8:	6823      	ldr	r3, [r4, #0]
 80013ca:	4393      	bics	r3, r2
 80013cc:	6023      	str	r3, [r4, #0]
 80013ce:	e7f8      	b.n	80013c2 <_printf_i+0x176>
 80013d0:	681a      	ldr	r2, [r3, #0]
 80013d2:	680d      	ldr	r5, [r1, #0]
 80013d4:	1d10      	adds	r0, r2, #4
 80013d6:	6949      	ldr	r1, [r1, #20]
 80013d8:	6018      	str	r0, [r3, #0]
 80013da:	6813      	ldr	r3, [r2, #0]
 80013dc:	062e      	lsls	r6, r5, #24
 80013de:	d501      	bpl.n	80013e4 <_printf_i+0x198>
 80013e0:	6019      	str	r1, [r3, #0]
 80013e2:	e002      	b.n	80013ea <_printf_i+0x19e>
 80013e4:	066d      	lsls	r5, r5, #25
 80013e6:	d5fb      	bpl.n	80013e0 <_printf_i+0x194>
 80013e8:	8019      	strh	r1, [r3, #0]
 80013ea:	2300      	movs	r3, #0
 80013ec:	9d03      	ldr	r5, [sp, #12]
 80013ee:	6123      	str	r3, [r4, #16]
 80013f0:	e7bf      	b.n	8001372 <_printf_i+0x126>
 80013f2:	681a      	ldr	r2, [r3, #0]
 80013f4:	1d11      	adds	r1, r2, #4
 80013f6:	6019      	str	r1, [r3, #0]
 80013f8:	6815      	ldr	r5, [r2, #0]
 80013fa:	2100      	movs	r1, #0
 80013fc:	0028      	movs	r0, r5
 80013fe:	6862      	ldr	r2, [r4, #4]
 8001400:	f000 f996 	bl	8001730 <memchr>
 8001404:	2800      	cmp	r0, #0
 8001406:	d001      	beq.n	800140c <_printf_i+0x1c0>
 8001408:	1b40      	subs	r0, r0, r5
 800140a:	6060      	str	r0, [r4, #4]
 800140c:	6863      	ldr	r3, [r4, #4]
 800140e:	6123      	str	r3, [r4, #16]
 8001410:	2300      	movs	r3, #0
 8001412:	9a03      	ldr	r2, [sp, #12]
 8001414:	7013      	strb	r3, [r2, #0]
 8001416:	e7ac      	b.n	8001372 <_printf_i+0x126>
 8001418:	002a      	movs	r2, r5
 800141a:	6923      	ldr	r3, [r4, #16]
 800141c:	9906      	ldr	r1, [sp, #24]
 800141e:	9805      	ldr	r0, [sp, #20]
 8001420:	9d07      	ldr	r5, [sp, #28]
 8001422:	47a8      	blx	r5
 8001424:	3001      	adds	r0, #1
 8001426:	d0ae      	beq.n	8001386 <_printf_i+0x13a>
 8001428:	6823      	ldr	r3, [r4, #0]
 800142a:	079b      	lsls	r3, r3, #30
 800142c:	d415      	bmi.n	800145a <_printf_i+0x20e>
 800142e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001430:	68e0      	ldr	r0, [r4, #12]
 8001432:	4298      	cmp	r0, r3
 8001434:	daa9      	bge.n	800138a <_printf_i+0x13e>
 8001436:	0018      	movs	r0, r3
 8001438:	e7a7      	b.n	800138a <_printf_i+0x13e>
 800143a:	0022      	movs	r2, r4
 800143c:	2301      	movs	r3, #1
 800143e:	9906      	ldr	r1, [sp, #24]
 8001440:	9805      	ldr	r0, [sp, #20]
 8001442:	9e07      	ldr	r6, [sp, #28]
 8001444:	3219      	adds	r2, #25
 8001446:	47b0      	blx	r6
 8001448:	3001      	adds	r0, #1
 800144a:	d09c      	beq.n	8001386 <_printf_i+0x13a>
 800144c:	3501      	adds	r5, #1
 800144e:	68e3      	ldr	r3, [r4, #12]
 8001450:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001452:	1a9b      	subs	r3, r3, r2
 8001454:	42ab      	cmp	r3, r5
 8001456:	dcf0      	bgt.n	800143a <_printf_i+0x1ee>
 8001458:	e7e9      	b.n	800142e <_printf_i+0x1e2>
 800145a:	2500      	movs	r5, #0
 800145c:	e7f7      	b.n	800144e <_printf_i+0x202>
 800145e:	46c0      	nop			@ (mov r8, r8)
 8001460:	08001929 	.word	0x08001929
 8001464:	0800193a 	.word	0x0800193a

08001468 <__sflush_r>:
 8001468:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800146a:	220c      	movs	r2, #12
 800146c:	5e8b      	ldrsh	r3, [r1, r2]
 800146e:	0005      	movs	r5, r0
 8001470:	000c      	movs	r4, r1
 8001472:	071a      	lsls	r2, r3, #28
 8001474:	d456      	bmi.n	8001524 <__sflush_r+0xbc>
 8001476:	684a      	ldr	r2, [r1, #4]
 8001478:	2a00      	cmp	r2, #0
 800147a:	dc02      	bgt.n	8001482 <__sflush_r+0x1a>
 800147c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800147e:	2a00      	cmp	r2, #0
 8001480:	dd4e      	ble.n	8001520 <__sflush_r+0xb8>
 8001482:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001484:	2f00      	cmp	r7, #0
 8001486:	d04b      	beq.n	8001520 <__sflush_r+0xb8>
 8001488:	2200      	movs	r2, #0
 800148a:	2080      	movs	r0, #128	@ 0x80
 800148c:	682e      	ldr	r6, [r5, #0]
 800148e:	602a      	str	r2, [r5, #0]
 8001490:	001a      	movs	r2, r3
 8001492:	0140      	lsls	r0, r0, #5
 8001494:	6a21      	ldr	r1, [r4, #32]
 8001496:	4002      	ands	r2, r0
 8001498:	4203      	tst	r3, r0
 800149a:	d033      	beq.n	8001504 <__sflush_r+0x9c>
 800149c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800149e:	89a3      	ldrh	r3, [r4, #12]
 80014a0:	075b      	lsls	r3, r3, #29
 80014a2:	d506      	bpl.n	80014b2 <__sflush_r+0x4a>
 80014a4:	6863      	ldr	r3, [r4, #4]
 80014a6:	1ad2      	subs	r2, r2, r3
 80014a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80014aa:	2b00      	cmp	r3, #0
 80014ac:	d001      	beq.n	80014b2 <__sflush_r+0x4a>
 80014ae:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80014b0:	1ad2      	subs	r2, r2, r3
 80014b2:	2300      	movs	r3, #0
 80014b4:	0028      	movs	r0, r5
 80014b6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80014b8:	6a21      	ldr	r1, [r4, #32]
 80014ba:	47b8      	blx	r7
 80014bc:	89a2      	ldrh	r2, [r4, #12]
 80014be:	1c43      	adds	r3, r0, #1
 80014c0:	d106      	bne.n	80014d0 <__sflush_r+0x68>
 80014c2:	6829      	ldr	r1, [r5, #0]
 80014c4:	291d      	cmp	r1, #29
 80014c6:	d846      	bhi.n	8001556 <__sflush_r+0xee>
 80014c8:	4b29      	ldr	r3, [pc, #164]	@ (8001570 <__sflush_r+0x108>)
 80014ca:	410b      	asrs	r3, r1
 80014cc:	07db      	lsls	r3, r3, #31
 80014ce:	d442      	bmi.n	8001556 <__sflush_r+0xee>
 80014d0:	2300      	movs	r3, #0
 80014d2:	6063      	str	r3, [r4, #4]
 80014d4:	6923      	ldr	r3, [r4, #16]
 80014d6:	6023      	str	r3, [r4, #0]
 80014d8:	04d2      	lsls	r2, r2, #19
 80014da:	d505      	bpl.n	80014e8 <__sflush_r+0x80>
 80014dc:	1c43      	adds	r3, r0, #1
 80014de:	d102      	bne.n	80014e6 <__sflush_r+0x7e>
 80014e0:	682b      	ldr	r3, [r5, #0]
 80014e2:	2b00      	cmp	r3, #0
 80014e4:	d100      	bne.n	80014e8 <__sflush_r+0x80>
 80014e6:	6560      	str	r0, [r4, #84]	@ 0x54
 80014e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80014ea:	602e      	str	r6, [r5, #0]
 80014ec:	2900      	cmp	r1, #0
 80014ee:	d017      	beq.n	8001520 <__sflush_r+0xb8>
 80014f0:	0023      	movs	r3, r4
 80014f2:	3344      	adds	r3, #68	@ 0x44
 80014f4:	4299      	cmp	r1, r3
 80014f6:	d002      	beq.n	80014fe <__sflush_r+0x96>
 80014f8:	0028      	movs	r0, r5
 80014fa:	f7ff fbf7 	bl	8000cec <_free_r>
 80014fe:	2300      	movs	r3, #0
 8001500:	6363      	str	r3, [r4, #52]	@ 0x34
 8001502:	e00d      	b.n	8001520 <__sflush_r+0xb8>
 8001504:	2301      	movs	r3, #1
 8001506:	0028      	movs	r0, r5
 8001508:	47b8      	blx	r7
 800150a:	0002      	movs	r2, r0
 800150c:	1c43      	adds	r3, r0, #1
 800150e:	d1c6      	bne.n	800149e <__sflush_r+0x36>
 8001510:	682b      	ldr	r3, [r5, #0]
 8001512:	2b00      	cmp	r3, #0
 8001514:	d0c3      	beq.n	800149e <__sflush_r+0x36>
 8001516:	2b1d      	cmp	r3, #29
 8001518:	d001      	beq.n	800151e <__sflush_r+0xb6>
 800151a:	2b16      	cmp	r3, #22
 800151c:	d11a      	bne.n	8001554 <__sflush_r+0xec>
 800151e:	602e      	str	r6, [r5, #0]
 8001520:	2000      	movs	r0, #0
 8001522:	e01e      	b.n	8001562 <__sflush_r+0xfa>
 8001524:	690e      	ldr	r6, [r1, #16]
 8001526:	2e00      	cmp	r6, #0
 8001528:	d0fa      	beq.n	8001520 <__sflush_r+0xb8>
 800152a:	680f      	ldr	r7, [r1, #0]
 800152c:	600e      	str	r6, [r1, #0]
 800152e:	1bba      	subs	r2, r7, r6
 8001530:	9201      	str	r2, [sp, #4]
 8001532:	2200      	movs	r2, #0
 8001534:	079b      	lsls	r3, r3, #30
 8001536:	d100      	bne.n	800153a <__sflush_r+0xd2>
 8001538:	694a      	ldr	r2, [r1, #20]
 800153a:	60a2      	str	r2, [r4, #8]
 800153c:	9b01      	ldr	r3, [sp, #4]
 800153e:	2b00      	cmp	r3, #0
 8001540:	ddee      	ble.n	8001520 <__sflush_r+0xb8>
 8001542:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001544:	0032      	movs	r2, r6
 8001546:	001f      	movs	r7, r3
 8001548:	0028      	movs	r0, r5
 800154a:	9b01      	ldr	r3, [sp, #4]
 800154c:	6a21      	ldr	r1, [r4, #32]
 800154e:	47b8      	blx	r7
 8001550:	2800      	cmp	r0, #0
 8001552:	dc07      	bgt.n	8001564 <__sflush_r+0xfc>
 8001554:	89a2      	ldrh	r2, [r4, #12]
 8001556:	2340      	movs	r3, #64	@ 0x40
 8001558:	2001      	movs	r0, #1
 800155a:	4313      	orrs	r3, r2
 800155c:	b21b      	sxth	r3, r3
 800155e:	81a3      	strh	r3, [r4, #12]
 8001560:	4240      	negs	r0, r0
 8001562:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001564:	9b01      	ldr	r3, [sp, #4]
 8001566:	1836      	adds	r6, r6, r0
 8001568:	1a1b      	subs	r3, r3, r0
 800156a:	9301      	str	r3, [sp, #4]
 800156c:	e7e6      	b.n	800153c <__sflush_r+0xd4>
 800156e:	46c0      	nop			@ (mov r8, r8)
 8001570:	dfbffffe 	.word	0xdfbffffe

08001574 <_fflush_r>:
 8001574:	690b      	ldr	r3, [r1, #16]
 8001576:	b570      	push	{r4, r5, r6, lr}
 8001578:	0005      	movs	r5, r0
 800157a:	000c      	movs	r4, r1
 800157c:	2b00      	cmp	r3, #0
 800157e:	d102      	bne.n	8001586 <_fflush_r+0x12>
 8001580:	2500      	movs	r5, #0
 8001582:	0028      	movs	r0, r5
 8001584:	bd70      	pop	{r4, r5, r6, pc}
 8001586:	2800      	cmp	r0, #0
 8001588:	d004      	beq.n	8001594 <_fflush_r+0x20>
 800158a:	6a03      	ldr	r3, [r0, #32]
 800158c:	2b00      	cmp	r3, #0
 800158e:	d101      	bne.n	8001594 <_fflush_r+0x20>
 8001590:	f7ff fa98 	bl	8000ac4 <__sinit>
 8001594:	220c      	movs	r2, #12
 8001596:	5ea3      	ldrsh	r3, [r4, r2]
 8001598:	2b00      	cmp	r3, #0
 800159a:	d0f1      	beq.n	8001580 <_fflush_r+0xc>
 800159c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800159e:	07d2      	lsls	r2, r2, #31
 80015a0:	d404      	bmi.n	80015ac <_fflush_r+0x38>
 80015a2:	059b      	lsls	r3, r3, #22
 80015a4:	d402      	bmi.n	80015ac <_fflush_r+0x38>
 80015a6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80015a8:	f7ff fb9d 	bl	8000ce6 <__retarget_lock_acquire_recursive>
 80015ac:	0028      	movs	r0, r5
 80015ae:	0021      	movs	r1, r4
 80015b0:	f7ff ff5a 	bl	8001468 <__sflush_r>
 80015b4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80015b6:	0005      	movs	r5, r0
 80015b8:	07db      	lsls	r3, r3, #31
 80015ba:	d4e2      	bmi.n	8001582 <_fflush_r+0xe>
 80015bc:	89a3      	ldrh	r3, [r4, #12]
 80015be:	059b      	lsls	r3, r3, #22
 80015c0:	d4df      	bmi.n	8001582 <_fflush_r+0xe>
 80015c2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80015c4:	f7ff fb90 	bl	8000ce8 <__retarget_lock_release_recursive>
 80015c8:	e7db      	b.n	8001582 <_fflush_r+0xe>

080015ca <__swbuf_r>:
 80015ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015cc:	0006      	movs	r6, r0
 80015ce:	000d      	movs	r5, r1
 80015d0:	0014      	movs	r4, r2
 80015d2:	2800      	cmp	r0, #0
 80015d4:	d004      	beq.n	80015e0 <__swbuf_r+0x16>
 80015d6:	6a03      	ldr	r3, [r0, #32]
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d101      	bne.n	80015e0 <__swbuf_r+0x16>
 80015dc:	f7ff fa72 	bl	8000ac4 <__sinit>
 80015e0:	69a3      	ldr	r3, [r4, #24]
 80015e2:	60a3      	str	r3, [r4, #8]
 80015e4:	89a3      	ldrh	r3, [r4, #12]
 80015e6:	071b      	lsls	r3, r3, #28
 80015e8:	d502      	bpl.n	80015f0 <__swbuf_r+0x26>
 80015ea:	6923      	ldr	r3, [r4, #16]
 80015ec:	2b00      	cmp	r3, #0
 80015ee:	d109      	bne.n	8001604 <__swbuf_r+0x3a>
 80015f0:	0021      	movs	r1, r4
 80015f2:	0030      	movs	r0, r6
 80015f4:	f000 f82c 	bl	8001650 <__swsetup_r>
 80015f8:	2800      	cmp	r0, #0
 80015fa:	d003      	beq.n	8001604 <__swbuf_r+0x3a>
 80015fc:	2501      	movs	r5, #1
 80015fe:	426d      	negs	r5, r5
 8001600:	0028      	movs	r0, r5
 8001602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001604:	6923      	ldr	r3, [r4, #16]
 8001606:	6820      	ldr	r0, [r4, #0]
 8001608:	b2ef      	uxtb	r7, r5
 800160a:	1ac0      	subs	r0, r0, r3
 800160c:	6963      	ldr	r3, [r4, #20]
 800160e:	b2ed      	uxtb	r5, r5
 8001610:	4283      	cmp	r3, r0
 8001612:	dc05      	bgt.n	8001620 <__swbuf_r+0x56>
 8001614:	0021      	movs	r1, r4
 8001616:	0030      	movs	r0, r6
 8001618:	f7ff ffac 	bl	8001574 <_fflush_r>
 800161c:	2800      	cmp	r0, #0
 800161e:	d1ed      	bne.n	80015fc <__swbuf_r+0x32>
 8001620:	68a3      	ldr	r3, [r4, #8]
 8001622:	3001      	adds	r0, #1
 8001624:	3b01      	subs	r3, #1
 8001626:	60a3      	str	r3, [r4, #8]
 8001628:	6823      	ldr	r3, [r4, #0]
 800162a:	1c5a      	adds	r2, r3, #1
 800162c:	6022      	str	r2, [r4, #0]
 800162e:	701f      	strb	r7, [r3, #0]
 8001630:	6963      	ldr	r3, [r4, #20]
 8001632:	4283      	cmp	r3, r0
 8001634:	d004      	beq.n	8001640 <__swbuf_r+0x76>
 8001636:	89a3      	ldrh	r3, [r4, #12]
 8001638:	07db      	lsls	r3, r3, #31
 800163a:	d5e1      	bpl.n	8001600 <__swbuf_r+0x36>
 800163c:	2d0a      	cmp	r5, #10
 800163e:	d1df      	bne.n	8001600 <__swbuf_r+0x36>
 8001640:	0021      	movs	r1, r4
 8001642:	0030      	movs	r0, r6
 8001644:	f7ff ff96 	bl	8001574 <_fflush_r>
 8001648:	2800      	cmp	r0, #0
 800164a:	d0d9      	beq.n	8001600 <__swbuf_r+0x36>
 800164c:	e7d6      	b.n	80015fc <__swbuf_r+0x32>
	...

08001650 <__swsetup_r>:
 8001650:	4b2d      	ldr	r3, [pc, #180]	@ (8001708 <__swsetup_r+0xb8>)
 8001652:	b570      	push	{r4, r5, r6, lr}
 8001654:	0005      	movs	r5, r0
 8001656:	6818      	ldr	r0, [r3, #0]
 8001658:	000c      	movs	r4, r1
 800165a:	2800      	cmp	r0, #0
 800165c:	d004      	beq.n	8001668 <__swsetup_r+0x18>
 800165e:	6a03      	ldr	r3, [r0, #32]
 8001660:	2b00      	cmp	r3, #0
 8001662:	d101      	bne.n	8001668 <__swsetup_r+0x18>
 8001664:	f7ff fa2e 	bl	8000ac4 <__sinit>
 8001668:	230c      	movs	r3, #12
 800166a:	5ee2      	ldrsh	r2, [r4, r3]
 800166c:	0713      	lsls	r3, r2, #28
 800166e:	d423      	bmi.n	80016b8 <__swsetup_r+0x68>
 8001670:	06d3      	lsls	r3, r2, #27
 8001672:	d407      	bmi.n	8001684 <__swsetup_r+0x34>
 8001674:	2309      	movs	r3, #9
 8001676:	602b      	str	r3, [r5, #0]
 8001678:	2340      	movs	r3, #64	@ 0x40
 800167a:	2001      	movs	r0, #1
 800167c:	4313      	orrs	r3, r2
 800167e:	81a3      	strh	r3, [r4, #12]
 8001680:	4240      	negs	r0, r0
 8001682:	e03a      	b.n	80016fa <__swsetup_r+0xaa>
 8001684:	0752      	lsls	r2, r2, #29
 8001686:	d513      	bpl.n	80016b0 <__swsetup_r+0x60>
 8001688:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800168a:	2900      	cmp	r1, #0
 800168c:	d008      	beq.n	80016a0 <__swsetup_r+0x50>
 800168e:	0023      	movs	r3, r4
 8001690:	3344      	adds	r3, #68	@ 0x44
 8001692:	4299      	cmp	r1, r3
 8001694:	d002      	beq.n	800169c <__swsetup_r+0x4c>
 8001696:	0028      	movs	r0, r5
 8001698:	f7ff fb28 	bl	8000cec <_free_r>
 800169c:	2300      	movs	r3, #0
 800169e:	6363      	str	r3, [r4, #52]	@ 0x34
 80016a0:	2224      	movs	r2, #36	@ 0x24
 80016a2:	89a3      	ldrh	r3, [r4, #12]
 80016a4:	4393      	bics	r3, r2
 80016a6:	81a3      	strh	r3, [r4, #12]
 80016a8:	2300      	movs	r3, #0
 80016aa:	6063      	str	r3, [r4, #4]
 80016ac:	6923      	ldr	r3, [r4, #16]
 80016ae:	6023      	str	r3, [r4, #0]
 80016b0:	2308      	movs	r3, #8
 80016b2:	89a2      	ldrh	r2, [r4, #12]
 80016b4:	4313      	orrs	r3, r2
 80016b6:	81a3      	strh	r3, [r4, #12]
 80016b8:	6923      	ldr	r3, [r4, #16]
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d10b      	bne.n	80016d6 <__swsetup_r+0x86>
 80016be:	21a0      	movs	r1, #160	@ 0xa0
 80016c0:	2280      	movs	r2, #128	@ 0x80
 80016c2:	89a3      	ldrh	r3, [r4, #12]
 80016c4:	0089      	lsls	r1, r1, #2
 80016c6:	0092      	lsls	r2, r2, #2
 80016c8:	400b      	ands	r3, r1
 80016ca:	4293      	cmp	r3, r2
 80016cc:	d003      	beq.n	80016d6 <__swsetup_r+0x86>
 80016ce:	0021      	movs	r1, r4
 80016d0:	0028      	movs	r0, r5
 80016d2:	f000 f863 	bl	800179c <__smakebuf_r>
 80016d6:	230c      	movs	r3, #12
 80016d8:	5ee2      	ldrsh	r2, [r4, r3]
 80016da:	2101      	movs	r1, #1
 80016dc:	0013      	movs	r3, r2
 80016de:	400b      	ands	r3, r1
 80016e0:	420a      	tst	r2, r1
 80016e2:	d00b      	beq.n	80016fc <__swsetup_r+0xac>
 80016e4:	2300      	movs	r3, #0
 80016e6:	60a3      	str	r3, [r4, #8]
 80016e8:	6963      	ldr	r3, [r4, #20]
 80016ea:	425b      	negs	r3, r3
 80016ec:	61a3      	str	r3, [r4, #24]
 80016ee:	2000      	movs	r0, #0
 80016f0:	6923      	ldr	r3, [r4, #16]
 80016f2:	4283      	cmp	r3, r0
 80016f4:	d101      	bne.n	80016fa <__swsetup_r+0xaa>
 80016f6:	0613      	lsls	r3, r2, #24
 80016f8:	d4be      	bmi.n	8001678 <__swsetup_r+0x28>
 80016fa:	bd70      	pop	{r4, r5, r6, pc}
 80016fc:	0791      	lsls	r1, r2, #30
 80016fe:	d400      	bmi.n	8001702 <__swsetup_r+0xb2>
 8001700:	6963      	ldr	r3, [r4, #20]
 8001702:	60a3      	str	r3, [r4, #8]
 8001704:	e7f3      	b.n	80016ee <__swsetup_r+0x9e>
 8001706:	46c0      	nop			@ (mov r8, r8)
 8001708:	20000010 	.word	0x20000010

0800170c <_sbrk_r>:
 800170c:	2300      	movs	r3, #0
 800170e:	b570      	push	{r4, r5, r6, lr}
 8001710:	4d06      	ldr	r5, [pc, #24]	@ (800172c <_sbrk_r+0x20>)
 8001712:	0004      	movs	r4, r0
 8001714:	0008      	movs	r0, r1
 8001716:	602b      	str	r3, [r5, #0]
 8001718:	f7ff f8cc 	bl	80008b4 <_sbrk>
 800171c:	1c43      	adds	r3, r0, #1
 800171e:	d103      	bne.n	8001728 <_sbrk_r+0x1c>
 8001720:	682b      	ldr	r3, [r5, #0]
 8001722:	2b00      	cmp	r3, #0
 8001724:	d000      	beq.n	8001728 <_sbrk_r+0x1c>
 8001726:	6023      	str	r3, [r4, #0]
 8001728:	bd70      	pop	{r4, r5, r6, pc}
 800172a:	46c0      	nop			@ (mov r8, r8)
 800172c:	200001c0 	.word	0x200001c0

08001730 <memchr>:
 8001730:	b2c9      	uxtb	r1, r1
 8001732:	1882      	adds	r2, r0, r2
 8001734:	4290      	cmp	r0, r2
 8001736:	d101      	bne.n	800173c <memchr+0xc>
 8001738:	2000      	movs	r0, #0
 800173a:	4770      	bx	lr
 800173c:	7803      	ldrb	r3, [r0, #0]
 800173e:	428b      	cmp	r3, r1
 8001740:	d0fb      	beq.n	800173a <memchr+0xa>
 8001742:	3001      	adds	r0, #1
 8001744:	e7f6      	b.n	8001734 <memchr+0x4>
	...

08001748 <__swhatbuf_r>:
 8001748:	b570      	push	{r4, r5, r6, lr}
 800174a:	000e      	movs	r6, r1
 800174c:	001d      	movs	r5, r3
 800174e:	230e      	movs	r3, #14
 8001750:	5ec9      	ldrsh	r1, [r1, r3]
 8001752:	0014      	movs	r4, r2
 8001754:	b096      	sub	sp, #88	@ 0x58
 8001756:	2900      	cmp	r1, #0
 8001758:	da0c      	bge.n	8001774 <__swhatbuf_r+0x2c>
 800175a:	89b2      	ldrh	r2, [r6, #12]
 800175c:	2380      	movs	r3, #128	@ 0x80
 800175e:	0011      	movs	r1, r2
 8001760:	4019      	ands	r1, r3
 8001762:	421a      	tst	r2, r3
 8001764:	d114      	bne.n	8001790 <__swhatbuf_r+0x48>
 8001766:	2380      	movs	r3, #128	@ 0x80
 8001768:	00db      	lsls	r3, r3, #3
 800176a:	2000      	movs	r0, #0
 800176c:	6029      	str	r1, [r5, #0]
 800176e:	6023      	str	r3, [r4, #0]
 8001770:	b016      	add	sp, #88	@ 0x58
 8001772:	bd70      	pop	{r4, r5, r6, pc}
 8001774:	466a      	mov	r2, sp
 8001776:	f000 f853 	bl	8001820 <_fstat_r>
 800177a:	2800      	cmp	r0, #0
 800177c:	dbed      	blt.n	800175a <__swhatbuf_r+0x12>
 800177e:	23f0      	movs	r3, #240	@ 0xf0
 8001780:	9901      	ldr	r1, [sp, #4]
 8001782:	021b      	lsls	r3, r3, #8
 8001784:	4019      	ands	r1, r3
 8001786:	4b04      	ldr	r3, [pc, #16]	@ (8001798 <__swhatbuf_r+0x50>)
 8001788:	18c9      	adds	r1, r1, r3
 800178a:	424b      	negs	r3, r1
 800178c:	4159      	adcs	r1, r3
 800178e:	e7ea      	b.n	8001766 <__swhatbuf_r+0x1e>
 8001790:	2100      	movs	r1, #0
 8001792:	2340      	movs	r3, #64	@ 0x40
 8001794:	e7e9      	b.n	800176a <__swhatbuf_r+0x22>
 8001796:	46c0      	nop			@ (mov r8, r8)
 8001798:	ffffe000 	.word	0xffffe000

0800179c <__smakebuf_r>:
 800179c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800179e:	2602      	movs	r6, #2
 80017a0:	898b      	ldrh	r3, [r1, #12]
 80017a2:	0005      	movs	r5, r0
 80017a4:	000c      	movs	r4, r1
 80017a6:	b085      	sub	sp, #20
 80017a8:	4233      	tst	r3, r6
 80017aa:	d007      	beq.n	80017bc <__smakebuf_r+0x20>
 80017ac:	0023      	movs	r3, r4
 80017ae:	3347      	adds	r3, #71	@ 0x47
 80017b0:	6023      	str	r3, [r4, #0]
 80017b2:	6123      	str	r3, [r4, #16]
 80017b4:	2301      	movs	r3, #1
 80017b6:	6163      	str	r3, [r4, #20]
 80017b8:	b005      	add	sp, #20
 80017ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017bc:	ab03      	add	r3, sp, #12
 80017be:	aa02      	add	r2, sp, #8
 80017c0:	f7ff ffc2 	bl	8001748 <__swhatbuf_r>
 80017c4:	9f02      	ldr	r7, [sp, #8]
 80017c6:	9001      	str	r0, [sp, #4]
 80017c8:	0039      	movs	r1, r7
 80017ca:	0028      	movs	r0, r5
 80017cc:	f7ff fafa 	bl	8000dc4 <_malloc_r>
 80017d0:	2800      	cmp	r0, #0
 80017d2:	d108      	bne.n	80017e6 <__smakebuf_r+0x4a>
 80017d4:	220c      	movs	r2, #12
 80017d6:	5ea3      	ldrsh	r3, [r4, r2]
 80017d8:	059a      	lsls	r2, r3, #22
 80017da:	d4ed      	bmi.n	80017b8 <__smakebuf_r+0x1c>
 80017dc:	2203      	movs	r2, #3
 80017de:	4393      	bics	r3, r2
 80017e0:	431e      	orrs	r6, r3
 80017e2:	81a6      	strh	r6, [r4, #12]
 80017e4:	e7e2      	b.n	80017ac <__smakebuf_r+0x10>
 80017e6:	2380      	movs	r3, #128	@ 0x80
 80017e8:	89a2      	ldrh	r2, [r4, #12]
 80017ea:	6020      	str	r0, [r4, #0]
 80017ec:	4313      	orrs	r3, r2
 80017ee:	81a3      	strh	r3, [r4, #12]
 80017f0:	9b03      	ldr	r3, [sp, #12]
 80017f2:	6120      	str	r0, [r4, #16]
 80017f4:	6167      	str	r7, [r4, #20]
 80017f6:	2b00      	cmp	r3, #0
 80017f8:	d00c      	beq.n	8001814 <__smakebuf_r+0x78>
 80017fa:	0028      	movs	r0, r5
 80017fc:	230e      	movs	r3, #14
 80017fe:	5ee1      	ldrsh	r1, [r4, r3]
 8001800:	f000 f820 	bl	8001844 <_isatty_r>
 8001804:	2800      	cmp	r0, #0
 8001806:	d005      	beq.n	8001814 <__smakebuf_r+0x78>
 8001808:	2303      	movs	r3, #3
 800180a:	89a2      	ldrh	r2, [r4, #12]
 800180c:	439a      	bics	r2, r3
 800180e:	3b02      	subs	r3, #2
 8001810:	4313      	orrs	r3, r2
 8001812:	81a3      	strh	r3, [r4, #12]
 8001814:	89a3      	ldrh	r3, [r4, #12]
 8001816:	9a01      	ldr	r2, [sp, #4]
 8001818:	4313      	orrs	r3, r2
 800181a:	81a3      	strh	r3, [r4, #12]
 800181c:	e7cc      	b.n	80017b8 <__smakebuf_r+0x1c>
	...

08001820 <_fstat_r>:
 8001820:	2300      	movs	r3, #0
 8001822:	b570      	push	{r4, r5, r6, lr}
 8001824:	4d06      	ldr	r5, [pc, #24]	@ (8001840 <_fstat_r+0x20>)
 8001826:	0004      	movs	r4, r0
 8001828:	0008      	movs	r0, r1
 800182a:	0011      	movs	r1, r2
 800182c:	602b      	str	r3, [r5, #0]
 800182e:	f7ff f81e 	bl	800086e <_fstat>
 8001832:	1c43      	adds	r3, r0, #1
 8001834:	d103      	bne.n	800183e <_fstat_r+0x1e>
 8001836:	682b      	ldr	r3, [r5, #0]
 8001838:	2b00      	cmp	r3, #0
 800183a:	d000      	beq.n	800183e <_fstat_r+0x1e>
 800183c:	6023      	str	r3, [r4, #0]
 800183e:	bd70      	pop	{r4, r5, r6, pc}
 8001840:	200001c0 	.word	0x200001c0

08001844 <_isatty_r>:
 8001844:	2300      	movs	r3, #0
 8001846:	b570      	push	{r4, r5, r6, lr}
 8001848:	4d06      	ldr	r5, [pc, #24]	@ (8001864 <_isatty_r+0x20>)
 800184a:	0004      	movs	r4, r0
 800184c:	0008      	movs	r0, r1
 800184e:	602b      	str	r3, [r5, #0]
 8001850:	f7ff f81b 	bl	800088a <_isatty>
 8001854:	1c43      	adds	r3, r0, #1
 8001856:	d103      	bne.n	8001860 <_isatty_r+0x1c>
 8001858:	682b      	ldr	r3, [r5, #0]
 800185a:	2b00      	cmp	r3, #0
 800185c:	d000      	beq.n	8001860 <_isatty_r+0x1c>
 800185e:	6023      	str	r3, [r4, #0]
 8001860:	bd70      	pop	{r4, r5, r6, pc}
 8001862:	46c0      	nop			@ (mov r8, r8)
 8001864:	200001c0 	.word	0x200001c0

08001868 <_init>:
 8001868:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800186a:	46c0      	nop			@ (mov r8, r8)
 800186c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800186e:	bc08      	pop	{r3}
 8001870:	469e      	mov	lr, r3
 8001872:	4770      	bx	lr

08001874 <_fini>:
 8001874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001876:	46c0      	nop			@ (mov r8, r8)
 8001878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800187a:	bc08      	pop	{r3}
 800187c:	469e      	mov	lr, r3
 800187e:	4770      	bx	lr
